Audit - (1009),0,10081009,Weaknesses in this category are related to the design and architecture of audit-based components of the system. Frequently these deal with logging user activities in order to identify attackers and modifications to the system. The weaknesses in this category could lead to a degradation of the quality of the audit capability if they are not addressed when designing or implementing a secure architecture.,0
Improper Output Neutralization for Logs - (117),1,10081009117,The software does not neutralize or incorrectly neutralizes output that is written to logs.,10081009
Omission of Security-relevant Information - (223),2,10081009223,"The application does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",10081009
Obscured Security-relevant Information by Alternate Name - (224),3,10081009224,"The software records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",10081009
Insertion of Sensitive Information into Log File - (532),4,10081009532,Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.,10081009
Insufficient Logging - (778),5,10081009778,"When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.",10081009
Logging of Excessive Data - (779),6,10081009779,"The software logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.",10081009
Authenticate Actors - (1010),7,10081010,Weaknesses in this category are related to the design and architecture of authentication components of the system. Frequently these deal with verifying the entity is indeed who it claims to be. The weaknesses in this category could lead to a degradation of the quality of authentication if they are not addressed when designing or implementing a secure architecture.,0
Empty Password in Configuration File - (258),8,10081010258,Using an empty string as a password is insecure.,10081010
Use of Hard-coded Password - (259),9,10081010259,"The software contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",10081010
Not Using Password Aging - (262),10,10081010262,"If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.",10081010
Password Aging with Long Expiration - (263),11,10081010263,Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.,10081010
Improper Authentication - (287),12,10081010287,"When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.authentificationAuthC",10081010
Authentication Bypass Using an Alternate Path or Channel - (288),13,10081010288,"A product requires authentication, but the product has an alternate path or channel that does not require authentication.",10081010
Authentication Bypass by Alternate Name - (289),14,10081010289,"The software performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",10081010
Authentication Bypass by Spoofing - (290),15,10081010290,This attack-focused weakness is caused by improperly implemented authentication schemes that are subject to spoofing attacks.,10081010
Reliance on IP Address for Authentication - (291),16,10081010291,The software uses an IP address for authentication.,10081010
Using Referer Field for Authentication - (293),17,10081010293,"The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.referrer",10081010
Authentication Bypass by Capture-replay - (294),18,10081010294,A capture-replay flaw exists when the design of the software makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).,10081010
Reflection Attack in an Authentication Protocol - (301),19,10081010301,Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.,10081010
Authentication Bypass by Assumed-Immutable Data - (302),20,10081010302,"The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",10081010
Incorrect Implementation of Authentication Algorithm - (303),21,10081010303,"The requirements for the software dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",10081010
Missing Critical Step in Authentication - (304),22,10081010304,"The software implements an authentication technique, but it skips a step that weakens the technique.",10081010
Authentication Bypass by Primary Weakness - (305),23,10081010305,"The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",10081010
Missing Authentication for Critical Function - (306),24,10081010306,The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.,10081010
Improper Restriction of Excessive Authentication Attempts - (307),25,10081010307,"The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.",10081010
Use of Single-factor Authentication - (308),26,10081010308,The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.,10081010
Key Exchange without Entity Authentication - (322),27,10081010322,The software performs a key exchange with an actor without verifying the identity of that actor.,10081010
Weak Password Requirements - (521),28,10081010521,"The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",10081010
Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created - (593),29,10081010593,The software modifies the SSL context after connection creation has begun.,10081010
Use of Client-Side Authentication - (603),30,10081010603,"A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",10081010
Unverified Password Change - (620),31,10081010620,"When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",10081010
Weak Password Recovery Mechanism for Forgotten Password - (640),32,10081010640,"The software contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.",10081010
Use of Hard-coded Credentials - (798),33,10081010798,"The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",10081010
Use of Password Hash Instead of Password for Authentication - (836),34,10081010836,"The software records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",10081010
Use of Password Hash With Insufficient Computational Effort - (916),35,10081010916,"The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",10081010
Authorize Actors - (1011),36,10081011,"Weaknesses in this category are related to the design and architecture of a system's authorization components. Frequently these deal with enforcing that agents have the required permissions before performing certain operations, such as modifying data. The weaknesses in this category could lead to a degradation of quality of the authorization capability if they are not addressed when designing or implementing a secure architecture.",0
Process Control - (114),37,10081011114,Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.,10081011
External Control of System or Configuration Setting - (15),38,1008101115,One or more system settings or configuration elements can be externally controlled by a user.,10081011
Storage of File with Sensitive Data Under Web Root - (219),39,10081011219,"The application stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.",10081011
Storage of File With Sensitive Data Under FTP Root - (220),40,10081011220,"The application stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",10081011
Incorrect Privilege Assignment - (266),41,10081011266,"A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",10081011
Privilege Defined With Unsafe Actions - (267),42,10081011267,"A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",10081011
Privilege Chaining - (268),43,10081011268,"Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",10081011
Improper Privilege Management - (269),44,10081011269,"The software does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",10081011
Privilege Context Switching Error - (270),45,10081011270,The software does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.,10081011
Privilege Dropping / Lowering Errors - (271),46,10081011271,The software does not drop privileges before passing control of a resource to an actor that does not have those privileges.,10081011
Least Privilege Violation - (272),47,10081011272,The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.,10081011
Improper Check for Dropped Privileges - (273),48,10081011273,The software attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.,10081011
Improper Handling of Insufficient Privileges - (274),49,10081011274,"The software does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",10081011
Incorrect Default Permissions - (276),50,10081011276,"The product, upon installation, sets incorrect permissions for an object that exposes it to an unintended actor.",10081011
Insecure Inherited Permissions - (277),51,10081011277,A product defines a set of insecure permissions that are inherited by objects that are created by the program.,10081011
Incorrect Execution-Assigned Permissions - (279),52,10081011279,"While it is executing, the software sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",10081011
Improper Handling of Insufficient Permissions or Privileges  - (280),53,10081011280,The application does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the application in an invalid state.,10081011
Improper Preservation of Permissions - (281),54,10081011281,"The software does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",10081011
Improper Ownership Management - (282),55,10081011282,"The software assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",10081011
Unverified Ownership - (283),56,10081011283,The software does not properly verify that a critical resource is owned by the proper entity.,10081011
Improper Access Control - (284),57,10081011284,The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.Authorization,10081011
Improper Authorization - (285),58,10081011285,The software does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.AuthZ,10081011
Incorrect User Management - (286),59,10081011286,The software does not properly manage a user within its environment.,10081011
Channel Accessible by Non-Endpoint - (300),60,10081011300,"The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.Man-in-the-Middle / MITMPerson-in-the-Middle / PiTMMonkey-in-the-MiddleMonster-in-the-Middle",10081011
Predictable from Observable State - (341),61,10081011341,"A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",10081011
Exposure of Private Personal Information to an Unauthorized Actor - (359),62,10081011359,"The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.Privacy violationPrivacy leakPrivacy leakage",10081011
Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak') - (403),63,10081011403,"A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.File descriptor leak",10081011
Unprotected Primary Channel - (419),64,10081011419,"The software uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",10081011
Unprotected Alternate Channel - (420),65,10081011420,"The software protects a primary channel, but it does not use the same level of protection for an alternate channel.",10081011
Direct Request ('Forced Browsing') - (425),66,10081011425,"The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.forced browsing",10081011
Untrusted Search Path - (426),67,10081011426,The application searches for critical resources using an externally-supplied search path that can point to resources that are not under the application's direct control.Untrusted Path,10081011
Unrestricted Upload of File with Dangerous Type - (434),68,10081011434,The software allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.Unrestricted File Upload,10081011
Exposure of Version-Control Repository to an Unauthorized Control Sphere - (527),69,10081011527,"The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",10081011
Exposure of Core Dump File to an Unauthorized Control Sphere - (528),70,10081011528,"The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",10081011
Exposure of Access Control List Files to an Unauthorized Control Sphere - (529),71,10081011529,The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.,10081011
Exposure of Backup File to an Unauthorized Control Sphere - (530),72,10081011530,A backup file is stored in a directory or archive that is made accessible to unauthorized actors.,10081011
Insertion of Sensitive Information into Externally-Accessible File or Directory - (538),73,10081011538,"The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",10081011
Incorrect Behavior Order: Authorization Before Parsing and Canonicalization - (551),74,10081011551,"If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.",10081011
Files or Directories Accessible to External Parties - (552),75,10081011552,"The product makes files or directories accessible to unauthorized actors, even though they should not be.",10081011
Authorization Bypass Through User-Controlled SQL Primary Key - (566),76,10081011566,"The software uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.",10081011
Authorization Bypass Through User-Controlled Key - (639),77,10081011639,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.Insecure Direct Object Reference / IDORHorizontal Authorization,10081011
External Control of Critical State Data - (642),78,10081011642,"The software stores security-critical state information about its users, or the software itself, in a location that is accessible to unauthorized actors.",10081011
Use of Non-Canonical URL Paths for Authorization Decisions - (647),79,10081011647,The software defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.,10081011
Insufficient Compartmentalization - (653),80,10081011653,"The product does not sufficiently compartmentalize functionality or processes that require different privilege levels, rights, or permissions.Separation of Privilege",10081011
Reliance on Security Through Obscurity - (656),81,10081011656,"The software uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.Never Assuming your secrets are safe",10081011
Exposure of Resource to Wrong Sphere - (668),82,10081011668,"The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",10081011
Incorrect Resource Transfer Between Spheres - (669),83,10081011669,"The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",10081011
Lack of Administrator Control over Security - (671),84,10081011671,The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.,10081011
External Influence of Sphere Definition - (673),85,10081011673,The product does not prevent the definition of control spheres from external actors.,10081011
Incorrect Ownership Assignment - (708),86,10081011708,"The software assigns an owner to a resource, but the owner is outside of the intended control sphere.",10081011
Incorrect Permission Assignment for Critical Resource - (732),87,10081011732,The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.,10081011
Allocation of Resources Without Limits or Throttling - (770),88,10081011770,"The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",10081011
Exposed IOCTL with Insufficient Access Control - (782),89,10081011782,"The software implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",10081011
Improper Control of Document Type Definition - (827),90,10081011827,"The software does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the software to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.",10081011
Missing Authorization - (862),91,10081011862,The software does not perform an authorization check when an actor attempts to access a resource or perform an action.AuthZ,10081011
Incorrect Authorization - (863),92,10081011863,"The software performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.AuthZ",10081011
Storage of Sensitive Data in a Mechanism without Access Control - (921),93,10081011921,The software stores sensitive information in a file system or device that does not have built-in access control.,10081011
Improper Restriction of Communication Channel to Intended Endpoints - (923),94,10081011923,"The software establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",10081011
Improper Authorization in Handler for Custom URL Scheme - (939),95,10081011939,"The software uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",10081011
Permissive Cross-domain Policy with Untrusted Domains - (942),96,10081011942,The software uses a cross-domain policy file that includes domains that should not be trusted.,10081011
Cross Cutting - (1012),97,10081012,"Weaknesses in this category are related to the design and architecture of multiple security tactics and how they affect a system. For example, information exposure can impact the Limit Access and Limit Exposure security tactics. The weaknesses in this category could lead to a degradation of the quality of many capabilities if they are not addressed when designing or implementing a secure architecture.",0
Observable Timing Discrepancy - (208),98,10081012208,"Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",10081012
Missing Report of Error Condition - (392),99,10081012392,The software encounters an error but does not provide a status code or return value to indicate that an error has occurred.,10081012
Improper Cleanup on Thrown Exception - (460),100,10081012460,"The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.",10081012
Missing Standardized Error Handling Mechanism - (544),101,10081012544,"The software does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.",10081012
Client-Side Enforcement of Server-Side Security - (602),102,10081012602,The software is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.,10081012
Improper Check or Handling of Exceptional Conditions - (703),103,10081012703,The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software.,10081012
Improper Check for Unusual or Exceptional Conditions - (754),104,10081012754,The software does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the software.,10081012
Reliance on Cookies without Validation and Integrity Checking in a Security Decision - (784),105,10081012784,"The application uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",10081012
Reliance on Untrusted Inputs in a Security Decision - (807),106,10081012807,"The application uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.",10081012
Encrypt Data - (1013),107,10081013,Weaknesses in this category are related to the design and architecture of data confidentiality in a system. Frequently these deal with the use of encryption libraries. The weaknesses in this category could lead to a degradation of the quality data encryption if they are not addressed when designing or implementing a secure architecture.,0
Unprotected Storage of Credentials - (256),108,10081013256,Storing a password in plaintext may result in a system compromise.,10081013
Storing Passwords in a Recoverable Format - (257),109,10081013257,"The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",10081013
Password in Configuration File - (260),110,10081013260,The software stores a password in a configuration file that might be accessible to actors who do not know the password.,10081013
Weak Encoding for Password - (261),111,10081013261,Obscuring a password with a trivial encoding does not protect the password.,10081013
Missing Encryption of Sensitive Data - (311),112,10081013311,The software does not encrypt sensitive or critical information before storage or transmission.,10081013
Cleartext Storage of Sensitive Information - (312),113,10081013312,The application stores sensitive information in cleartext within a resource that might be accessible to another control sphere.,10081013
Cleartext Storage in a File or on Disk - (313),114,10081013313,"The application stores sensitive information in cleartext in a file, or on disk.",10081013
Cleartext Storage in the Registry - (314),115,10081013314,The application stores sensitive information in cleartext in the registry.,10081013
Cleartext Storage of Sensitive Information in a Cookie - (315),116,10081013315,The application stores sensitive information in cleartext in a cookie.,10081013
Cleartext Storage of Sensitive Information in Memory - (316),117,10081013316,The application stores sensitive information in cleartext in memory.,10081013
Cleartext Storage of Sensitive Information in GUI - (317),118,10081013317,The application stores sensitive information in cleartext within the GUI.,10081013
Cleartext Storage of Sensitive Information in Executable - (318),119,10081013318,The application stores sensitive information in cleartext in an executable.,10081013
Cleartext Transmission of Sensitive Information - (319),120,10081013319,The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.,10081013
Use of Hard-coded Cryptographic Key - (321),121,10081013321,The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.,10081013
"Reusing a Nonce, Key Pair in Encryption - (323)",122,10081013323,Nonces should be used for the present occasion and only once.,10081013
Use of a Key Past its Expiration Date - (324),123,10081013324,"The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.",10081013
Missing Required Cryptographic Step - (325),124,10081013325,"The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by that algorithm.",10081013
Inadequate Encryption Strength - (326),125,10081013326,"The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",10081013
Use of a Broken or Risky Cryptographic Algorithm - (327),126,10081013327,The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information.,10081013
Reversible One-Way Hash - (328),127,10081013328,"The product uses a hashing algorithm that produces a hash value that can be used to determine the original input, or to find an input that can produce the same hash, more efficiently than brute force techniques.",10081013
Use of Insufficiently Random Values - (330),128,10081013330,The software uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.,10081013
Insufficient Entropy - (331),129,10081013331,"The software uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",10081013
Insufficient Entropy in PRNG - (332),130,10081013332,"The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",10081013
Improper Handling of Insufficient Entropy in TRNG - (333),131,10081013333,True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.,10081013
Small Space of Random Values - (334),132,10081013334,"The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",10081013
Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG) - (335),133,10081013335,The software uses a Pseudo-Random Number Generator (PRNG) that does not correctly manage seeds.,10081013
Same Seed in Pseudo-Random Number Generator (PRNG) - (336),134,10081013336,A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.,10081013
Predictable Seed in Pseudo-Random Number Generator (PRNG) - (337),135,10081013337,"A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",10081013
Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) - (338),136,10081013338,"The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",10081013
Small Seed Space in PRNG - (339),137,10081013339,A PRNG uses a relatively small space of seeds.,10081013
Improper Verification of Cryptographic Signature - (347),138,10081013347,"The software does not verify, or incorrectly verifies, the cryptographic signature for data.",10081013
Insufficiently Protected Credentials - (522),139,10081013522,"The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",10081013
Unprotected Transport of Credentials - (523),140,10081013523,Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.,10081013
Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade') - (757),141,10081013757,"A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",10081013
Use of a One-Way Hash without a Salt - (759),142,10081013759,"The software uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the software does not also use a salt as part of the input.",10081013
Use of a One-Way Hash with a Predictable Salt - (760),143,10081013760,"The software uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the software uses a predictable salt as part of the input.",10081013
Use of RSA Algorithm without OAEP - (780),144,10081013780,"The software uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",10081013
Insecure Storage of Sensitive Information - (922),145,10081013922,The software stores sensitive information without properly limiting read or write access by unauthorized actors.,10081013
Identify Actors - (1014),146,10081014,Weaknesses in this category are related to the design and architecture of a system's identification management components. Frequently these deal with verifying that external agents provide inputs into the system. The weaknesses in this category could lead to a degradation of the quality of identification management if they are not addressed when designing or implementing a secure architecture.,0
Improper Certificate Validation - (295),147,10081014295,"The software does not validate, or incorrectly validates, a certificate.",10081014
Improper Following of a Certificate's Chain of Trust - (296),148,10081014296,"The software does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.",10081014
Improper Validation of Certificate with Host Mismatch - (297),149,10081014297,"The software communicates with a host that provides a certificate, but the software does not properly ensure that the certificate is actually associated with that host.",10081014
Improper Validation of Certificate Expiration - (298),150,10081014298,"A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.",10081014
Improper Check for Certificate Revocation - (299),151,10081014299,"The software does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",10081014
Insufficient Verification of Data Authenticity - (345),152,10081014345,"The software does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",10081014
Origin Validation Error - (346),153,10081014346,The software does not properly verify that the source of data or communication is valid.,10081014
Missing Check for Certificate Revocation after Initial Check - (370),154,10081014370,"The software does not check the revocation status of a certificate after its initial revocation check, which can cause the software to perform privileged actions even after the certificate is revoked at a later time.",10081014
Unintended Proxy or Intermediary ('Confused Deputy') - (441),155,10081014441,"The software receives a request, message, or directive from an upstream component, but the software does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the software's control sphere. This causes the software to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.Confused Deputy",10081014
Missing Validation of OpenSSL Certificate - (599),156,10081014599,The software uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.,10081014
Improper Verification of Source of a Communication Channel - (940),157,10081014940,"The software establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",10081014
Incorrectly Specified Destination in a Communication Channel - (941),158,10081014941,"The software creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",10081014
Limit Access - (1015),159,10081015,"Weaknesses in this category are related to the design and architecture of system resources. Frequently these deal with restricting the amount of resources that are accessed by actors, such as memory, network connections, CPU or access points. The weaknesses in this category could lead to a degradation of the quality of authentication if they are not addressed when designing or implementing a secure architecture.",0
Exposure of Sensitive Information Through Sent Data - (201),160,10081015201,"The code transmits data to another actor, but the data contains sensitive information that should not be accessible to the actor that is receiving the data.",10081015
Generation of Error Message Containing Sensitive Information - (209),161,10081015209,"The software generates an error message that includes sensitive information about its environment, users, or associated data.",10081015
Improper Removal of Sensitive Information Before Storage or Transfer - (212),162,10081015212,"The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",10081015
Creation of chroot Jail Without Changing Working Directory - (243),163,10081015243,"The program uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.",10081015
Execution with Unnecessary Privileges - (250),164,10081015250,"The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",10081015
Externally Controlled Reference to a Resource in Another Sphere - (610),165,10081015610,The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.,10081015
Improper Restriction of XML External Entity Reference - (611),166,10081015611,"The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.XXE",10081015
External Control of File Name or Path - (73),167,1008101573,The software allows user input to control or influence paths or file names that are used in filesystem operations.,10081015
Limit Exposure - (1016),168,10081016,Weaknesses in this category are related to the design and architecture of the entry points to a system. Frequently these deal with minimizing the attack surface through designing the system with the least needed amount of entry points. The weaknesses in this category could lead to a degradation of a system's defenses if they are not addressed when designing or implementing a secure architecture.,0
Self-generated Error Message Containing Sensitive Information - (210),169,10081016210,The software identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.,10081016
Externally-Generated Error Message Containing Sensitive Information - (211),170,10081016211,"The application performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the application, such as an error generated by the programming language interpreter that the software uses. The error can contain sensitive system information.",10081016
Invocation of Process Using Visible Sensitive Information - (214),171,10081016214,"A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",10081016
Server-generated Error Message Containing Sensitive Information - (550),172,10081016550,"Certain conditions, such as network failure, will cause a server error message to be displayed.",10081016
Inclusion of Functionality from Untrusted Control Sphere - (829),173,10081016829,"The software imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",10081016
Inclusion of Web Functionality from an Untrusted Source - (830),174,10081016830,"The software includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the software, potentially granting total access and control of the software to the untrusted source.",10081016
Lock Computer - (1017),175,10081017,Weaknesses in this category are related to the design and architecture of a system's lockout mechanism. Frequently these deal with scenarios that take effect in case of multiple failed attempts to access a given resource. The weaknesses in this category could lead to a degradation of access to system assets if they are not addressed when designing or implementing a secure architecture.,0
Overly Restrictive Account Lockout Mechanism - (645),176,10081017645,"The software contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.",10081017
Manage User Sessions - (1018),177,10081018,Weaknesses in this category are related to the design and architecture of session management. Frequently these deal with the information or status about each user and their access rights for the duration of multiple requests. The weaknesses in this category could lead to a degradation of the quality of session management if they are not addressed when designing or implementing a secure architecture.,0
Session Fixation - (384),178,10081018384,"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",10081018
Exposure of Data Element to Wrong Session - (488),179,10081018488,"The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.",10081018
J2EE Bad Practices: Non-serializable Object Stored in Session - (579),180,10081018579,"The application stores a non-serializable object as an HttpSession attribute, which can hurt reliability.",10081018
J2EE Misconfiguration: Insufficient Session-ID Length - (6),181,100810186,The J2EE application is configured to use an insufficient session ID length.,10081018
Insufficient Session Expiration - (613),182,10081018613,"According to WASC, ""Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.""",10081018
Improper Enforcement of Behavioral Workflow - (841),183,10081018841,"The software supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.",10081018
Validate Inputs - (1019),184,10081019,"Weaknesses in this category are related to the design and architecture of a system's input validation components. Frequently these deal with sanitizing, neutralizing and validating any externally provided inputs to minimize malformed data from entering the system and preventing code injection in the input data. The weaknesses in this category could lead to a degradation of the quality of data flow in a system if they are not addressed when designing or implementing a secure architecture.",0
Improper Neutralization of Special Elements - (138),185,10081019138,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",10081019
"Improper Neutralization of Escape, Meta, or Control Sequences - (150)",186,10081019150,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",10081019
Improper Input Validation - (20),187,1008101920,"The product receives input or data, but it does
        not validate or incorrectly validates that the input has the
        properties that are required to process the data safely and
        correctly.",10081019
Acceptance of Extraneous Untrusted Data With Trusted Data - (349),188,10081019349,"The software, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",10081019
Cross-Site Request Forgery (CSRF) - (352),189,10081019352,"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.Session RidingCross Site Reference ForgeryXSRF",10081019
External Control of Assumed-Immutable Web Parameter - (472),190,10081019472,"The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.Assumed-Immutable Parameter Tampering",10081019
PHP External Variable Modification - (473),191,10081019473,"A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",10081019
Deserialization of Untrusted Data - (502),192,10081019502,"The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.Marshaling, UnmarshalingPickling, UnpicklingPHP Object Injection",10081019
Improper Link Resolution Before File Access ('Link Following') - (59),193,1008101959,"The software attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.insecure temporary file",10081019
URL Redirection to Untrusted Site ('Open Redirect') - (601),194,10081019601,"A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.Open RedirectCross-site RedirectCross-domain Redirect",10081019
Improper Restriction of Names for Files and Other Resources - (641),195,10081019641,"The application constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.",10081019
Improper Neutralization of Data within XPath Expressions ('XPath Injection') - (643),196,10081019643,"The software uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",10081019
Improper Neutralization of Data within XQuery Expressions ('XQuery Injection') - (652),197,10081019652,"The software uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",10081019
Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - (74),198,1008101974,"The software constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",10081019
Failure to Sanitize Special Elements into a Different Plane (Special Element Injection) - (75),199,1008101975,The software does not adequately filter user-controlled input for special elements with control implications.,10081019
Improper Neutralization of Equivalent Special Elements - (76),200,1008101976,"The software properly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.",10081019
Improper Neutralization of Special Elements used in a Command ('Command Injection') - (77),201,1008101977,"The software constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",10081019
Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') - (78),202,1008101978,"The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.Shell injectionShell metacharacters",10081019
Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - (79),203,1008101979,The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.XSSHTML InjectionCSS,10081019
Improper Filtering of Special Elements - (790),204,10081019790,"The software receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",10081019
Incomplete Filtering of Special Elements - (791),205,10081019791,"The software receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",10081019
Incomplete Filtering of One or More Instances of Special Elements - (792),206,10081019792,"The software receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.",10081019
Only Filtering One Instance of a Special Element - (793),207,10081019793,"The software receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.",10081019
Incomplete Filtering of Multiple Instances of Special Elements - (794),208,10081019794,"The software receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",10081019
Only Filtering Special Elements at a Specified Location - (795),209,10081019795,"The software receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.",10081019
Only Filtering Special Elements Relative to a Marker - (796),210,10081019796,"The software receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. ""at the beginning/end of a string; the second argument""), thereby missing remaining special elements that may exist before sending it to a downstream component.",10081019
Only Filtering Special Elements at an Absolute Position - (797),211,10081019797,"The software receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. ""byte number 10""), thereby missing remaining special elements that may exist before sending it to a downstream component.",10081019
Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') - (88),212,1008101988,"The software constructs a string for a command to executed by a separate component
in another control sphere, but it does not properly delimit the
intended arguments, options, or switches within that command string.",10081019
Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - (89),213,1008101989,"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.",10081019
Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') - (90),214,1008101990,"The software constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",10081019
XML Injection (aka Blind XPath Injection) - (91),215,1008101991,"The software does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.",10081019
Improper Neutralization of CRLF Sequences ('CRLF Injection') - (93),216,1008101993,"The software uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",10081019
Improper Control of Generation of Code ('Code Injection') - (94),217,1008101994,"The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",10081019
Improper Neutralization of Special Elements in Data Query Logic - (943),218,10081019943,"The application generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",10081019
Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection') - (95),219,1008101995,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. ""eval"").",10081019
Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') - (96),220,1008101996,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",10081019
Improper Neutralization of Server-Side Includes (SSI) Within a Web Page - (97),221,1008101997,"The software generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",10081019
Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') - (98),222,1008101998,"The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in ""require,"" ""include,"" or similar functions.Remote file includeRFILocal file inclusion",10081019
Improper Control of Resource Identifiers ('Resource Injection') - (99),223,1008101999,"The software receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.Insecure Direct Object Reference",10081019
Verify Message Integrity - (1020),224,10081020,"Weaknesses in this category are related to the design and architecture of a system's data integrity components. Frequently these deal with ensuring integrity of data, such as messages, resource files, deployment files, and configuration files. The weaknesses in this category could lead to a degradation of data integrity quality if they are not addressed when designing or implementing a secure architecture.",0
Missing Support for Integrity Check - (353),225,10081020353,"The software uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.",10081020
Improper Validation of Integrity Check Value - (354),226,10081020354,"The software does not validate or incorrectly validates the integrity check values or ""checksums"" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.",10081020
Detection of Error Condition Without Action - (390),227,10081020390,"The software detects a specific error, but takes no actions to handle the error.",10081020
Unchecked Error Condition - (391),228,10081020391,[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.,10081020
Download of Code Without Integrity Check - (494),229,10081020494,The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.,10081020
Reliance on Cookies without Validation and Integrity Checking - (565),230,10081020565,"The application relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",10081020
Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking - (649),231,10081020649,"The software uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the software does not use integrity checks to detect if those inputs have been modified.",10081020
Improper Neutralization - (707),232,10081020707,The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.,10081020
Improper Handling of Exceptional Conditions - (755),233,10081020755,The software does not handle or incorrectly handles an exceptional condition.,10081020
Improper Enforcement of Message Integrity During Transmission in a Communication Channel - (924),234,10081020924,"The software establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",10081020
