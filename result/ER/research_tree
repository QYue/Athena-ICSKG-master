Root
├── Improper Access Control - (284)
│   ├── Access Control Check Implemented After Asset is Accessed - (1280)
│   ├── Agents Included in Control Policy are not Contained in Less-Privileged Policy - (1268)
│   ├── CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations - (1252)
│   ├── Exposed Chip Debug and or Test Interface With Insufficient Access Control - (1191)
│   ├── Generation of Incorrect Security Identifiers - (1270)
│   ├── Hardware Block Incorrectly Connected to Larger System - (1276)
│   ├── Hardware Features Enable Physical Attacks from Software - (1256)
│   ├── Improper Access Control Applied to Mirrored or Aliased Memory Regions - (1257)
│   ├── Improper Authentication - (287)
│   │   ├── Authentication Bypass Using an Alternate Path or Channel - (288)
│   │   │   └── Direct Request ('Forced Browsing') - (425)
│   │   ├── Authentication Bypass by Alternate Name - (289)
│   │   ├── Authentication Bypass by Assumed-Immutable Data - (302)
│   │   ├── Authentication Bypass by Capture-replay - (294)
│   │   ├── Authentication Bypass by Primary Weakness - (305)
│   │   ├── Authentication Bypass by Spoofing - (290)
│   │   │   ├── Reliance on IP Address for Authentication - (291)
│   │   │   ├── Reliance on Reverse DNS Resolution for a Security-Critical Action - (350)
│   │   │   └── Using Referer Field for Authentication - (293)
│   │   ├── Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created - (593)
│   │   ├── Guessable CAPTCHA - (804)
│   │   ├── Improper Certificate Validation - (295)
│   │   │   ├── Improper Check for Certificate Revocation - (299)
│   │   │   │   └── Missing Check for Certificate Revocation after Initial Check - (370)
│   │   │   ├── Improper Following of a Certificate's Chain of Trust - (296)
│   │   │   ├── Improper Validation of Certificate Expiration - (298)
│   │   │   ├── Improper Validation of Certificate with Host Mismatch - (297)
│   │   │   └── Missing Validation of OpenSSL Certificate - (599)
│   │   ├── Improper Restriction of Excessive Authentication Attempts - (307)
│   │   ├── Incorrect Implementation of Authentication Algorithm - (303)
│   │   ├── Insufficiently Protected Credentials - (522)
│   │   │   ├── J2EE Misconfiguration: Plaintext Password in Configuration File - (555)
│   │   │   ├── Missing Password Field Masking - (549)
│   │   │   ├── Password in Configuration File - (260)
│   │   │   │   ├── ASP.NET Misconfiguration: Password in Configuration File - (13)
│   │   │   │   └── Empty Password in Configuration File - (258)
│   │   │   ├── Storing Passwords in a Recoverable Format - (257)
│   │   │   ├── Unprotected Storage of Credentials - (256)
│   │   │   └── Unprotected Transport of Credentials - (523)
│   │   ├── Missing Authentication for Critical Function - (306)
│   │   ├── Missing Critical Step in Authentication - (304)
│   │   ├── Not Using Password Aging - (262)
│   │   ├── Overly Restrictive Account Lockout Mechanism - (645)
│   │   ├── Password Aging with Long Expiration - (263)
│   │   ├── Reflection Attack in an Authentication Protocol - (301)
│   │   ├── Unverified Password Change - (620)
│   │   ├── Use of Client-Side Authentication - (603)
│   │   ├── Use of Hard-coded Credentials - (798)
│   │   │   ├── Use of Hard-coded Cryptographic Key - (321)
│   │   │   └── Use of Hard-coded Password - (259)
│   │   ├── Use of Password Hash Instead of Password for Authentication - (836)
│   │   ├── Use of Password System for Primary Authentication - (309)
│   │   ├── Use of Single-factor Authentication - (308)
│   │   ├── Weak Encoding for Password - (261)
│   │   ├── Weak Password Recovery Mechanism for Forgotten Password - (640)
│   │   └── Weak Password Requirements - (521)
│   │       └── Empty Password in Configuration File - (258)
│   ├── Improper Authorization - (285)
│   │   ├── Exposure of Sensitive Information Through Metadata - (1230)
│   │   │   ├── Exposure of Sensitive Information Through Data Queries - (202)
│   │   │   └── Improper Authorization of Index Containing Sensitive Information - (612)
│   │   ├── Files or Directories Accessible to External Parties - (552)
│   │   │   ├── Command Shell in Externally Accessible Directory - (553)
│   │   │   ├── Exposure of Access Control List Files to an Unauthorized Control Sphere - (529)
│   │   │   ├── Exposure of Backup File to an Unauthorized Control Sphere - (530)
│   │   │   ├── Exposure of Core Dump File to an Unauthorized Control Sphere - (528)
│   │   │   ├── Exposure of Version-Control Repository to an Unauthorized Control Sphere - (527)
│   │   │   ├── Storage of File With Sensitive Data Under FTP Root - (220)
│   │   │   ├── Storage of File with Sensitive Data Under Web Root - (219)
│   │   │   │   └── Unparsed Raw Web Content Delivery - (433)
│   │   │   └── Use of Persistent Cookies Containing Sensitive Information - (539)
│   │   ├── Improper Authorization on Physical Debug and Test Interfaces - (1244)
│   │   ├── Improper Export of Android Application Components - (926)
│   │   ├── Incorrect Authorization - (863)
│   │   │   ├── Authorization Bypass Through User-Controlled Key - (639)
│   │   │   │   └── Authorization Bypass Through User-Controlled SQL Primary Key - (566)
│   │   │   ├── Guessable CAPTCHA - (804)
│   │   │   ├── Incorrect Behavior Order: Authorization Before Parsing and Canonicalization - (551)
│   │   │   └── Use of Non-Canonical URL Paths for Authorization Decisions - (647)
│   │   ├── Incorrect Permission Assignment for Critical Resource - (732)
│   │   │   ├── Improper Preservation of Permissions - (281)
│   │   │   ├── Incorrect Default Permissions - (276)
│   │   │   ├── Incorrect Execution-Assigned Permissions - (279)
│   │   │   ├── Insecure Inherited Permissions - (277)
│   │   │   ├── Insecure Preserved Inherited Permissions - (278)
│   │   │   └── Sensitive Cookie Without 'HttpOnly' Flag - (1004)
│   │   ├── Missing Authorization - (862)
│   │   │   ├── Direct Request ('Forced Browsing') - (425)
│   │   │   ├── Improper Authorization in Handler for Custom URL Scheme - (939)
│   │   │   └── Not Using Complete Mediation - (638)
│   │   │       └── Improper Protection of Alternate Path - (424)
│   │   │           └── Direct Request ('Forced Browsing') - (425)
│   │   └── Use of Implicit Intent for Sensitive Communication - (927)
│   ├── Improper Handling of Overlap Between Protected Memory Ranges - (1260)
│   ├── Improper Implementation of Lock Protection Registers - (1231)
│   ├── Improper Ownership Management - (282)
│   │   ├── Incorrect Ownership Assignment - (708)
│   │   └── Unverified Ownership - (283)
│   ├── Improper Privilege Management - (269)
│   │   ├── Execution with Unnecessary Privileges - (250)
│   │   ├── Improper Handling of Insufficient Privileges - (274)
│   │   ├── Incorrect Privilege Assignment - (266)
│   │   │   ├── .NET Misconfiguration: Use of Impersonation - (520)
│   │   │   ├── ASP.NET Misconfiguration: Use of Identity Impersonation - (556)
│   │   │   ├── J2EE Misconfiguration: Weak Access Permissions for EJB Methods - (9)
│   │   │   └── Use of Web Link to Untrusted Target with window.opener Access - (1022)
│   │   ├── Incorrect Use of Privileged APIs - (648)
│   │   ├── Privilege Chaining - (268)
│   │   ├── Privilege Context Switching Error - (270)
│   │   ├── Privilege Defined With Unsafe Actions - (267)
│   │   │   └── Unsafe ActiveX Control Marked Safe For Scripting - (623)
│   │   └── Privilege Dropping / Lowering Errors - (271)
│   │       ├── Improper Check for Dropped Privileges - (273)
│   │       └── Least Privilege Violation - (272)
│   ├── Improper Protection of Security Identifiers - (1259)
│   ├── Improper Restriction of Communication Channel to Intended Endpoints - (923)
│   │   ├── Channel Accessible by Non-Endpoint - (300)
│   │   ├── Improper Validation of Certificate with Host Mismatch - (297)
│   │   ├── Improper Verification of Intent by Broadcast Receiver - (925)
│   │   ├── Improper Verification of Source of a Communication Channel - (940)
│   │   ├── Incorrectly Specified Destination in a Communication Channel - (941)
│   │   ├── Key Exchange without Entity Authentication - (322)
│   │   ├── Reliance on IP Address for Authentication - (291)
│   │   ├── Reliance on Reverse DNS Resolution for a Security-Critical Action - (350)
│   │   ├── Unprotected Alternate Channel - (420)
│   │   │   ├── Race Condition During Access to Alternate Channel - (421)
│   │   │   └── Unprotected Windows Messaging Channel ('Shatter') - (422)
│   │   └── Unprotected Primary Channel - (419)
│   ├── Improper Restriction of Write-Once Bit Fields - (1224)
│   ├── Inclusion of Undocumented Features or Chicken Bits - (1242)
│   ├── Incorrect User Management - (286)
│   │   └── Placement of User into Incorrect Group - (842)
│   ├── Insufficient Granularity of Access Control - (1220)
│   │   └── Insufficient Granularity of Address Regions Protected by Register Locks - (1222)
│   ├── Insufficient Protections on the Volatile Memory Containing Boot Code - (1274)
│   ├── Mutable Attestation or Measurement Reporting Data - (1283)
│   ├── Origin Validation Error - (346)
│   ├── Permissive Cross-domain Policy with Untrusted Domains - (942)
│   ├── Policy Uses Obsolete Encoding - (1267)
│   ├── Register Interface Allows Software Access to Sensitive Data or Security Settings - (1262)
│   └── Sensitive Cookie with Improper SameSite Attribute - (1275)
├── Improper Adherence to Coding Standards - (710)
│   ├── Active Debug Code - (489)
│   │   └── ASP.NET Misconfiguration: Creating Debug Binary - (11)
│   ├── Architecture with Number of Horizontal Layers Outside of Expected Range - (1044)
│   ├── Compilation with Insufficient Warnings or Errors - (1127)
│   ├── Declaration of Variable with Unnecessarily Wide Scope - (1126)
│   ├── Embedded Malicious Code - (506)
│   │   ├── Logic/Time Bomb - (511)
│   │   ├── Spyware - (512)
│   │   ├── Trapdoor - (510)
│   │   └── Trojan Horse - (507)
│   │       ├── Non-Replicating Malicious Code - (508)
│   │       └── Replicating Malicious Code (Virus or Worm) - (509)
│   ├── Excessive Code Complexity - (1120)
│   │   ├── Excessive Attack Surface - (1125)
│   │   ├── Excessive Halstead Complexity - (1122)
│   │   ├── Excessive McCabe Cyclomatic Complexity - (1121)
│   │   ├── Excessive Number of Inefficient Server-Side Data Accesses - (1060)
│   │   ├── Excessive Use of Self-Modifying Code - (1123)
│   │   ├── Excessive Use of Unconditional Branching - (1119)
│   │   ├── Excessively Deep Nesting - (1124)
│   │   ├── Invokable Control Element with Signature Containing an Excessive Number of Parameters - (1064)
│   │   ├── Invokable Control Element with Variadic Parameters - (1056)
│   │   ├── Loop Condition Value Update within the Loop - (1095)
│   │   ├── Modules with Circular Dependencies - (1047)
│   │   ├── Source Code File with Excessive Number of Lines of Code - (1080)
│   │   └── Unconditional Control Flow Transfer outside of Switch Block - (1075)
│   ├── Excessively Complex Data Representation - (1093)
│   │   ├── Class with Excessive Number of Child Classes - (1086)
│   │   ├── Class with Excessively Deep Inheritance - (1074)
│   │   ├── Data Element Aggregating an Excessively Large Number of Non-Primitive Elements - (1043)
│   │   └── Multiple Inheritance from Concrete Classes - (1055)
│   ├── Expression is Always False - (570)
│   ├── Expression is Always True - (571)
│   ├── Failure to Disable Reserved Bits - (1209)
│   ├── Hidden Functionality - (912)
│   ├── Improper Following of Specification by Caller - (573)
│   │   ├── Creation of chroot Jail Without Changing Working Directory - (243)
│   │   ├── Duplicate Operations on Resource - (675)
│   │   │   ├── Double Decoding of the Same Data - (174)
│   │   │   ├── Double Free - (415)
│   │   │   ├── Multiple Binds to the Same Port - (605)
│   │   │   ├── Multiple Locks of a Critical Resource - (764)
│   │   │   └── Multiple Unlocks of a Critical Resource - (765)
│   │   ├── EJB Bad Practices: Use of Class Loader - (578)
│   │   ├── EJB Bad Practices: Use of Sockets - (577)
│   │   ├── Function Call with Incorrectly Specified Arguments - (628)
│   │   │   ├── Function Call With Incorrect Argument Type - (686)
│   │   │   ├── Function Call With Incorrect Number of Arguments - (685)
│   │   │   ├── Function Call With Incorrect Order of Arguments - (683)
│   │   │   ├── Function Call With Incorrect Variable or Reference as Argument - (688)
│   │   │   └── Function Call With Incorrectly Specified Argument Value - (687)
│   │   │       └── Use of umask() with chmod-style Argument - (560)
│   │   ├── Improper Following of a Certificate's Chain of Trust - (296)
│   │   ├── Improperly Implemented Security Check for Standard - (358)
│   │   ├── Incorrect Check of Function Return Value - (253)
│   │   ├── J2EE Bad Practices: Non-serializable Object Stored in Session - (579)
│   │   ├── Missing Critical Step in Authentication - (304)
│   │   ├── Missing Required Cryptographic Step - (325)
│   │   ├── Not Using a Random IV with CBC Mode - (329)
│   │   ├── Object Model Violation: Just One of Equals and Hashcode Defined - (581)
│   │   ├── Struts: Form Bean Does Not Extend Validation Class - (104)
│   │   ├── Struts: Incomplete validate() Method Definition - (103)
│   │   ├── Undefined Behavior for Input to API - (475)
│   │   ├── Use of Low-Level Functionality - (695)
│   │   │   ├── Direct Use of Unsafe JNI - (111)
│   │   │   ├── EJB Bad Practices: Use of AWT Swing - (575)
│   │   │   ├── EJB Bad Practices: Use of Java I/O - (576)
│   │   │   ├── EJB Bad Practices: Use of Synchronization Primitives - (574)
│   │   │   ├── J2EE Bad Practices: Direct Management of Connections - (245)
│   │   │   ├── J2EE Bad Practices: Direct Use of Sockets - (246)
│   │   │   └── J2EE Bad Practices: Direct Use of Threads - (383)
│   │   ├── Use of Multiple Resources with Duplicate Identifier - (694)
│   │   │   ├── Duplicate Key in Associative List (Alist) - (462)
│   │   │   └── Struts: Duplicate Validation Forms - (102)
│   │   ├── clone() Method Without super.clone() - (580)
│   │   └── finalize() Method Without super.finalize() - (568)
│   ├── Incomplete Documentation - (1059)
│   │   ├── Incomplete Design Documentation - (1110)
│   │   ├── Incomplete Documentation of Program Execution - (1112)
│   │   ├── Incomplete I/O Documentation - (1111)
│   │   ├── Insufficient Documentation of Error Handling Techniques - (1118)
│   │   └── Missing Documentation for Design - (1053)
│   ├── Inconsistency Between Implementation and Documented Design - (1068)
│   ├── Incorrect Provision of Specified Functionality - (684)
│   │   ├── Expected Behavior Violation - (440)
│   │   ├── Improper Finite State Machines (FSMs) in Hardware Logic - (1245)
│   │   ├── Missing Report of Error Condition - (392)
│   │   ├── Return of Wrong Status Code - (393)
│   │   ├── UI Discrepancy for Security Feature - (446)
│   │   │   ├── Obsolete Feature in UI - (448)
│   │   │   ├── The UI Performs the Wrong Action - (449)
│   │   │   └── Unimplemented or Unsupported Feature in UI - (447)
│   │   └── User Interface (UI) Misrepresentation of Critical Information - (451)
│   │       ├── Improper Restriction of Rendered UI Layers or Frames - (1021)
│   │       └── Insufficient Visual Distinction of Homoglyphs Presented to User - (1007)
│   ├── Insufficient Adherence to Expected Conventions - (1076)
│   │   ├── Class Instance Self Destruction Control Element - (1082)
│   │   ├── Class with Virtual Method without a Virtual Destructor - (1087)
│   │   ├── Data Element containing Pointer Item without Proper Copy Control Element - (1098)
│   │   ├── Excessive Reliance on Global Variables - (1108)
│   │   ├── Explicit Call to Finalize() - (586)
│   │   ├── Inappropriate Source Code Style or Formatting - (1078)
│   │   │   ├── Callable with Insufficient Behavioral Summary - (1117)
│   │   │   ├── Inaccurate Comments - (1116)
│   │   │   ├── Inappropriate Comment Style - (1113)
│   │   │   ├── Inappropriate Whitespace Style - (1114)
│   │   │   ├── Inconsistent Naming Conventions for Identifiers - (1099)
│   │   │   ├── Insufficient Isolation of Symbolic Constant Definitions - (1107)
│   │   │   ├── Insufficient Use of Symbolic Constants - (1106)
│   │   │   ├── Invokable Control Element with Excessive Volume of Commented-out Code - (1085)
│   │   │   ├── Source Code Element without Standard Prologue - (1115)
│   │   │   ├── Suspicious Comment - (546)
│   │   │   ├── Use of Hard-coded, Security-relevant Constants - (547)
│   │   │   └── Use of Same Variable for Multiple Purposes - (1109)
│   │   ├── Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor - (1045)
│   │   ├── Parent Class without Virtual Destructor Method - (1079)
│   │   ├── Persistent Storable Data Element without Associated Comparison Control Element - (1097)
│   │   └── Use of Object without Invoking Destructor Method - (1091)
│   ├── Insufficient Encapsulation - (1061)
│   │   ├── Critical Data Element Declared Public - (766)
│   │   ├── Data Access Operations Outside of Expected Data Manager Component - (1057)
│   │   ├── Data Access from Outside Expected Data Manager Component - (1083)
│   │   ├── Insufficient Encapsulation of Machine-Dependent Functionality - (1105)
│   │   │   └── Reliance on Data/Memory Layout - (188)
│   │   │       └── Use of Incorrect Byte Ordering - (198)
│   │   ├── Insufficient Isolation of System-Dependent Functions - (1100)
│   │   ├── Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer - (1054)
│   │   ├── Method Containing Access of a Member Element from Another Class - (1090)
│   │   └── Parent Class with References to Child Class - (1062)
│   ├── Invokable Control Element with Large Number of Outward Calls - (1048)
│   ├── Irrelevant Code - (1164)
│   │   ├── Assignment to Variable without Use - (563)
│   │   ├── Dead Code - (561)
│   │   └── Empty Code Block - (1071)
│   │       ├── Empty Exception Block - (1069)
│   │       └── Empty Synchronized Block - (585)
│   ├── J2EE Framework: Saving Unserializable Objects to Disk - (594)
│   ├── Missing Serialization Control Element - (1066)
│   ├── NULL Pointer Dereference - (476)
│   │   └── Unchecked Return Value to NULL Pointer Dereference - (690)
│   ├── Omitted Break Statement in Switch - (484)
│   ├── Reliance on Runtime Component in Generated Code - (1101)
│   ├── Reliance on Undefined, Unspecified, or Implementation-Defined Behavior - (758)
│   │   ├── Assignment of a Fixed Address to a Pointer - (587)
│   │   ├── Attempt to Access Child of a Non-structure Pointer - (588)
│   │   ├── Insecure Automated Optimizations - (1038)
│   │   │   ├── Compiler Optimization Removal or Modification of Security-critical Code - (733)
│   │   │   │   └── Compiler Removal of Code to Clear Buffers - (14)
│   │   │   └── Processor Optimization Removal or Modification of Security-critical Code - (1037)
│   │   ├── Insufficient Encapsulation of Machine-Dependent Functionality - (1105)
│   │   │   └── Reliance on Data/Memory Layout - (188)
│   │   │       └── Use of Incorrect Byte Ordering - (198)
│   │   ├── Reliance on Machine-Dependent Data Representation - (1102)
│   │   ├── Return of Stack Variable Address - (562)
│   │   ├── Use of Function with Inconsistent Implementations - (474)
│   │   │   └── Call to Non-ubiquitous API - (589)
│   │   └── Use of Platform-Dependent Third Party Components - (1103)
│   ├── Runtime Resource Management Control Element in a Component Built to Run on Application Servers - (1065)
│   ├── Serializable Data Element Containing non-Serializable Item Elements - (1070)
│   ├── Struts: Unused Validation Form - (107)
│   ├── Struts: Validator Without Form Field - (110)
│   ├── Use of Obsolete Function - (477)
│   ├── Use of Prohibited Code - (1177)
│   │   ├── Use of Inherently Dangerous Function - (242)
│   │   └── Use of Potentially Dangerous Function - (676)
│   │       └── Use of Path Manipulation Function without Maximum-sized Buffer - (785)
│   ├── Use of Redundant Code - (1041)
│   ├── Use of Same Invokable Control Element in Multiple Architectural Layers - (1092)
│   ├── Use of Unmaintained Third Party Components - (1104)
│   └── Violation of Secure Design Principles - (657)
│       ├── Execution with Unnecessary Privileges - (250)
│       ├── Insufficient Compartmentalization - (653)
│       ├── Insufficient Psychological Acceptability - (655)
│       ├── Lack of Administrator Control over Security - (671)
│       │   ├── Unimplemented or Unsupported Feature in UI - (447)
│       │   └── Use of Hard-coded Credentials - (798)
│       │       ├── Use of Hard-coded Cryptographic Key - (321)
│       │       └── Use of Hard-coded Password - (259)
│       ├── Not Failing Securely ('Failing Open') - (636)
│       │   └── Non-exit on Failed Initialization - (455)
│       ├── Not Using Complete Mediation - (638)
│       │   └── Improper Protection of Alternate Path - (424)
│       │       └── Direct Request ('Forced Browsing') - (425)
│       ├── Reliance on Security Through Obscurity - (656)
│       ├── Reliance on a Single Factor in a Security Decision - (654)
│       │   ├── Use of Password System for Primary Authentication - (309)
│       │   └── Use of Single-factor Authentication - (308)
│       ├── System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers - (1192)
│       └── Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism') - (637)
├── Improper Check or Handling of Exceptional Conditions - (703)
│   ├── Declaration of Throws for Generic Exception - (397)
│   ├── Improper Check for Unusual or Exceptional Conditions - (754)
│   │   ├── Improper Check for Dropped Privileges - (273)
│   │   ├── Improper Validation of Integrity Check Value - (354)
│   │   ├── Incorrect Check of Function Return Value - (253)
│   │   ├── NULL Pointer Dereference - (476)
│   │   │   └── Unchecked Return Value to NULL Pointer Dereference - (690)
│   │   ├── Unchecked Return Value - (252)
│   │   └── Unexpected Status Code or Return Value - (394)
│   ├── Improper Handling of Additional Special Element - (167)
│   ├── Improper Handling of Exceptional Conditions - (755)
│   │   ├── Declaration of Catch for Generic Exception - (396)
│   │   ├── Detection of Error Condition Without Action - (390)
│   │   ├── Generation of Error Message Containing Sensitive Information - (209)
│   │   │   ├── Externally-Generated Error Message Containing Sensitive Information - (211)
│   │   │   │   ├── Exposure of Information Through Shell Error Message - (535)
│   │   │   │   ├── Java Runtime Error Message Containing Sensitive Information - (537)
│   │   │   │   └── Servlet Runtime Error Message Containing Sensitive Information - (536)
│   │   │   ├── Self-generated Error Message Containing Sensitive Information - (210)
│   │   │   └── Server-generated Error Message Containing Sensitive Information - (550)
│   │   ├── Improper Cleanup on Thrown Exception - (460)
│   │   ├── Improper Handling of Insufficient Permissions or Privileges  - (280)
│   │   ├── Improper Handling of Single Event Upsets - (1261)
│   │   ├── Missing Custom Error Page - (756)
│   │   │   ├── ASP.NET Misconfiguration: Missing Custom Error Page - (12)
│   │   │   └── J2EE Misconfiguration: Missing Custom Error Page - (7)
│   │   ├── Missing Standardized Error Handling Mechanism - (544)
│   │   ├── Not Failing Securely ('Failing Open') - (636)
│   │   │   └── Non-exit on Failed Initialization - (455)
│   │   └── Use of NullPointerException Catch to Detect NULL Pointer Dereference - (395)
│   ├── Improper Handling of Inconsistent Special Elements - (168)
│   ├── Improper Handling of Insufficient Entropy in TRNG - (333)
│   ├── Improper Handling of Insufficient Privileges - (274)
│   ├── Improper Handling of Missing Special Element - (166)
│   ├── Improper Handling of Syntactically Invalid Structure - (228)
│   │   ├── Improper Handling of Parameters - (233)
│   │   │   ├── Failure to Handle Missing Parameter - (234)
│   │   │   ├── Improper Handling of Extra Parameters - (235)
│   │   │   └── Improper Handling of Undefined Parameters - (236)
│   │   ├── Improper Handling of Structural Elements - (237)
│   │   │   ├── Failure to Handle Incomplete Element - (239)
│   │   │   ├── Improper Handling of Incomplete Structural Elements - (238)
│   │   │   └── Improper Handling of Inconsistent Structural Elements - (240)
│   │   │       └── Improper Handling of Length Parameter Inconsistency - (130)
│   │   ├── Improper Handling of Unexpected Data Type - (241)
│   │   └── Improper Handling of Values - (229)
│   │       ├── Improper Handling of Extra Values - (231)
│   │       ├── Improper Handling of Missing Values - (230)
│   │       └── Improper Handling of Undefined Values - (232)
│   ├── Missing Protection Against Voltage and Clock Glitches - (1247)
│   ├── Missing Report of Error Condition - (392)
│   ├── Return of Wrong Status Code - (393)
│   ├── Uncaught Exception - (248)
│   │   └── Uncaught Exception in Servlet  - (600)
│   └── Unchecked Error Condition - (391)
├── Improper Control of a Resource Through its Lifetime - (664)
│   ├── Asymmetric Resource Consumption (Amplification) - (405)
│   │   ├── Data Resource Access without Use of Connection Pooling - (1072)
│   │   ├── Excessive Index Range Scan for a Data Resource - (1094)
│   │   ├── Excessive Platform Resource Consumption within a Loop - (1050)
│   │   ├── Improper Handling of Highly Compressed Data (Data Amplification) - (409)
│   │   │   └── Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion') - (776)
│   │   ├── Incorrect Behavior Order: Early Amplification - (408)
│   │   ├── Inefficient Algorithmic Complexity - (407)
│   │   ├── Inefficient CPU Computation - (1176)
│   │   │   ├── Creation of Class Instance within a Static Code Block - (1063)
│   │   │   ├── Creation of Immutable Text Using String Concatenation - (1046)
│   │   │   ├── Excessive Data Query Operations in a Large Data Table - (1049)
│   │   │   ├── Excessive Execution of Sequential Searches of Data Resource - (1067)
│   │   │   └── Static Member Data Element outside of a Singleton Class Element - (1042)
│   │   ├── Insufficient Control of Network Message Volume (Network Amplification) - (406)
│   │   ├── Invokable Control Element with Excessive File or Data Access Operations - (1084)
│   │   ├── Large Data Table with Excessive Number of Indices - (1089)
│   │   └── Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses - (1073)
│   ├── Cloneable Class Containing Sensitive Information - (498)
│   ├── Creation of Emergent Resource - (1229)
│   │   └── Covert Channel - (514)
│   │       ├── Covert Storage Channel - (515)
│   │       └── Covert Timing Channel - (385)
│   ├── Debug/Power State Transitions Leak Information - (1272)
│   ├── Exposed Dangerous Method or Function - (749)
│   │   ├── Exposed IOCTL with Insufficient Access Control - (782)
│   │   └── Exposed Unsafe ActiveX Method - (618)
│   ├── Exposure of Data Element to Wrong Session - (488)
│   ├── Exposure of Resource to Wrong Sphere - (668)
│   │   ├── Access to Critical Private Variable via Public Method - (767)
│   │   ├── Array Declared Public, Final, and Static - (582)
│   │   ├── Assumed-Immutable Data Stored in Writable Memory - (1282)
│   │   ├── Critical Public Variable Without Final Modifier - (493)
│   │   │   └── Public Static Field Not Marked Final - (500)
│   │   ├── Exposure of Sensitive Information to an Unauthorized Actor - (200)
│   │   │   ├── Device Unlock Credential Sharing - (1273)
│   │   │   ├── Exposure of Private Personal Information to an Unauthorized Actor - (359)
│   │   │   ├── Exposure of Security-Sensitive Fuse Values During Debug - (1243)
│   │   │   ├── Exposure of Sensitive Information Due to Incompatible Policies - (213)
│   │   │   ├── Exposure of Sensitive Information Through Sent Data - (201)
│   │   │   │   └── Use of GET Request Method With Sensitive Query Strings - (598)
│   │   │   ├── Exposure of Sensitive System Information to an Unauthorized Control Sphere - (497)
│   │   │   │   ├── Exposure of Information Through Directory Listing - (548)
│   │   │   │   ├── Exposure of Sensitive Information Through Environmental Variables - (526)
│   │   │   │   └── Invocation of Process Using Visible Sensitive Information - (214)
│   │   │   ├── Generation of Error Message Containing Sensitive Information - (209)
│   │   │   │   ├── Externally-Generated Error Message Containing Sensitive Information - (211)
│   │   │   │   │   ├── Exposure of Information Through Shell Error Message - (535)
│   │   │   │   │   ├── Java Runtime Error Message Containing Sensitive Information - (537)
│   │   │   │   │   └── Servlet Runtime Error Message Containing Sensitive Information - (536)
│   │   │   │   ├── Self-generated Error Message Containing Sensitive Information - (210)
│   │   │   │   └── Server-generated Error Message Containing Sensitive Information - (550)
│   │   │   ├── Insertion of Sensitive Information Into Debugging Code - (215)
│   │   │   ├── Insertion of Sensitive Information into Externally-Accessible File or Directory - (538)
│   │   │   │   ├── Exposure of WSDL File Containing Sensitive Information - (651)
│   │   │   │   ├── Inclusion of Sensitive Information in Source Code - (540)
│   │   │   │   │   ├── Inclusion of Sensitive Information in Source Code Comments - (615)
│   │   │   │   │   ├── Inclusion of Sensitive Information in Test Code - (531)
│   │   │   │   │   └── Inclusion of Sensitive Information in an Include File - (541)
│   │   │   │   └── Insertion of Sensitive Information into Log File - (532)
│   │   │   └── Observable Discrepancy - (203)
│   │   │       ├── Observable Behavioral Discrepancy - (205)
│   │   │       │   ├── Observable Behavioral Discrepancy With Equivalent Products - (207)
│   │   │       │   └── Observable Internal Behavioral Discrepancy - (206)
│   │   │       ├── Observable Response Discrepancy - (204)
│   │   │       └── Observable Timing Discrepancy - (208)
│   │   │           └── Incorrect Comparison Logic Granularity - (1254)
│   │   ├── External Control of Critical State Data - (642)
│   │   │   ├── External Control of Assumed-Immutable Web Parameter - (472)
│   │   │   ├── External Control of File Name or Path - (73)
│   │   │   │   └── Process Control - (114)
│   │   │   ├── External Control of System or Configuration Setting - (15)
│   │   │   ├── Reliance on Cookies without Validation and Integrity Checking - (565)
│   │   │   │   └── Reliance on Cookies without Validation and Integrity Checking in a Security Decision - (784)
│   │   │   └── Untrusted Search Path - (426)
│   │   ├── Files or Directories Accessible to External Parties - (552)
│   │   │   ├── Command Shell in Externally Accessible Directory - (553)
│   │   │   ├── Exposure of Access Control List Files to an Unauthorized Control Sphere - (529)
│   │   │   ├── Exposure of Backup File to an Unauthorized Control Sphere - (530)
│   │   │   ├── Exposure of Core Dump File to an Unauthorized Control Sphere - (528)
│   │   │   ├── Exposure of Version-Control Repository to an Unauthorized Control Sphere - (527)
│   │   │   ├── Storage of File With Sensitive Data Under FTP Root - (220)
│   │   │   ├── Storage of File with Sensitive Data Under Web Root - (219)
│   │   │   │   └── Unparsed Raw Web Content Delivery - (433)
│   │   │   └── Use of Persistent Cookies Containing Sensitive Information - (539)
│   │   ├── Improper Isolation of Shared Resources on System-on-Chip (SoC) - (1189)
│   │   ├── Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - (22)
│   │   │   ├── Absolute Path Traversal - (36)
│   │   │   │   ├── Path Traversal: '/absolute/pathname/here' - (37)
│   │   │   │   ├── Path Traversal: 'C:dirname' - (39)
│   │   │   │   ├── Path Traversal: '\\UNC\share\name\' (Windows UNC Share) - (40)
│   │   │   │   └── Path Traversal: '\absolute\pathname\here' - (38)
│   │   │   └── Relative Path Traversal - (23)
│   │   │       ├── Path Traversal: '...' (Triple Dot) - (32)
│   │   │       ├── Path Traversal: '....' (Multiple Dot) - (33)
│   │   │       ├── Path Traversal: '....//' - (34)
│   │   │       ├── Path Traversal: '.../...//' - (35)
│   │   │       ├── Path Traversal: '../filedir' - (24)
│   │   │       ├── Path Traversal: '..\filedir' - (28)
│   │   │       ├── Path Traversal: '/../filedir' - (25)
│   │   │       ├── Path Traversal: '/dir/../filename' - (26)
│   │   │       ├── Path Traversal: '\..\filename' - (29)
│   │   │       ├── Path Traversal: '\dir\..\filename' - (30)
│   │   │       ├── Path Traversal: 'dir/../../filename' - (27)
│   │   │       └── Path Traversal: 'dir\..\..\filename' - (31)
│   │   ├── Incorrect Permission Assignment for Critical Resource - (732)
│   │   │   ├── Improper Preservation of Permissions - (281)
│   │   │   ├── Incorrect Default Permissions - (276)
│   │   │   ├── Incorrect Execution-Assigned Permissions - (279)
│   │   │   ├── Insecure Inherited Permissions - (277)
│   │   │   ├── Insecure Preserved Inherited Permissions - (278)
│   │   │   └── Sensitive Cookie Without 'HttpOnly' Flag - (1004)
│   │   ├── Insecure Temporary File - (377)
│   │   │   ├── Creation of Temporary File With Insecure Permissions - (378)
│   │   │   └── Creation of Temporary File in Directory with Insecure Permissions - (379)
│   │   ├── Insufficiently Protected Credentials - (522)
│   │   │   ├── J2EE Misconfiguration: Plaintext Password in Configuration File - (555)
│   │   │   ├── Missing Password Field Masking - (549)
│   │   │   ├── Password in Configuration File - (260)
│   │   │   │   ├── ASP.NET Misconfiguration: Password in Configuration File - (13)
│   │   │   │   └── Empty Password in Configuration File - (258)
│   │   │   ├── Storing Passwords in a Recoverable Format - (257)
│   │   │   ├── Unprotected Storage of Credentials - (256)
│   │   │   └── Unprotected Transport of Credentials - (523)
│   │   ├── J2EE Misconfiguration: Entity Bean Declared Remote - (8)
│   │   ├── Passing Mutable Objects to an Untrusted Method - (374)
│   │   ├── Public cloneable() Method Without Final ('Object Hijack') - (491)
│   │   ├── Returning a Mutable Object to an Untrusted Caller - (375)
│   │   ├── Struts: Non-private Field in ActionForm Class - (608)
│   │   ├── Transmission of Private Resources into a New Sphere ('Resource Leak') - (402)
│   │   │   ├── Dangling Database Cursor ('Cursor Injection') - (619)
│   │   │   └── Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak') - (403)
│   │   ├── Uncontrolled Search Path Element - (427)
│   │   ├── Unquoted Search Path or Element - (428)
│   │   ├── Use of Cache Containing Sensitive Information - (524)
│   │   │   └── Use of Web Browser Cache Containing Sensitive Information - (525)
│   │   ├── Use of Externally-Controlled Format String - (134)
│   │   ├── Use of Implicit Intent for Sensitive Communication - (927)
│   │   ├── Use of Inner Class Containing Sensitive Data - (492)
│   │   └── finalize() Method Declared Public - (583)
│   ├── External Influence of Sphere Definition - (673)
│   │   └── Untrusted Search Path - (426)
│   ├── Externally Controlled Reference to a Resource in Another Sphere - (610)
│   │   ├── External Control of File Name or Path - (73)
│   │   │   └── Process Control - (114)
│   │   ├── External Control of System or Configuration Setting - (15)
│   │   ├── Improper Restriction of XML External Entity Reference - (611)
│   │   ├── Session Fixation - (384)
│   │   ├── URL Redirection to Untrusted Site ('Open Redirect') - (601)
│   │   ├── Unintended Proxy or Intermediary ('Confused Deputy') - (441)
│   │   │   ├── Improper Restriction of Rendered UI Layers or Frames - (1021)
│   │   │   └── Server-Side Request Forgery (SSRF) - (918)
│   │   └── Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') - (470)
│   ├── Firmware Not Updateable - (1277)
│   ├── Improper Control of Dynamically-Managed Code Resources - (913)
│   │   ├── Deserialization of Untrusted Data - (502)
│   │   ├── Improper Control of Dynamically-Identified Variables - (914)
│   │   │   ├── Dynamic Variable Evaluation - (627)
│   │   │   └── Variable Extraction Error - (621)
│   │   ├── Improper Control of Generation of Code ('Code Injection') - (94)
│   │   │   ├── Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection') - (95)
│   │   │   └── Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') - (96)
│   │   │       └── Improper Neutralization of Server-Side Includes (SSI) Within a Web Page - (97)
│   │   ├── Improperly Controlled Modification of Dynamically-Determined Object Attributes - (915)
│   │   └── Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') - (470)
│   ├── Improper Initialization - (665)
│   │   ├── Allocation of Resources Without Limits or Throttling - (770)
│   │   │   ├── Allocation of File Descriptors or Handles Without Limits or Throttling - (774)
│   │   │   └── Uncontrolled Memory Allocation - (789)
│   │   ├── Cryptographic Primitives used without Successful Self-Test - (1279)
│   │   ├── Excessive Use of Hard-Coded Literals in Initialization - (1052)
│   │   ├── External Initialization of Trusted Variables or Data Stores - (454)
│   │   ├── Incorrect Register Defaults or Module Parameters - (1221)
│   │   ├── Initialization with Hard-Coded Network Resource Configuration Data - (1051)
│   │   ├── Insecure Default Initialization of Resource - (1188)
│   │   │   └── Insecure Default Variable Initialization - (453)
│   │   ├── Missing Initialization of Resource - (909)
│   │   │   └── Missing Initialization of a Variable - (456)
│   │   ├── Missing Known Value on Reset for Registers Holding Security Settings - (1271)
│   │   ├── Non-exit on Failed Initialization - (455)
│   │   └── Use of Uninitialized Resource - (908)
│   │       └── Use of Uninitialized Variable - (457)
│   ├── Improper Preservation of Consistency Between Independent Representations of Shared State - (1250)
│   │   ├── Application-Level Admin Tool with Inconsistent View of Underlying Operating System - (1249)
│   │   └── Mirrored Regions with Different Values - (1251)
│   ├── Improper Resource Shutdown or Release - (404)
│   │   ├── Improper Check for Certificate Revocation - (299)
│   │   │   └── Missing Check for Certificate Revocation after Initial Check - (370)
│   │   ├── Improper Scrubbing of Sensitive Data from Decommissioned Device - (1266)
│   │   ├── Incomplete Cleanup - (459)
│   │   │   ├── Improper Cleanup on Thrown Exception - (460)
│   │   │   ├── Sensitive Information Uncleared in Resource Before Release for Reuse - (226)
│   │   │   │   ├── Improper Clearing of Heap Memory Before Release ('Heap Inspection') - (244)
│   │   │   │   └── Improper Zeroization of Hardware Register - (1239)
│   │   │   └── finalize() Method Without super.finalize() - (568)
│   │   ├── Missing Release of Resource after Effective Lifetime - (772)
│   │   │   ├── Missing Release of File Descriptor or Handle after Effective Lifetime - (775)
│   │   │   ├── Missing Release of Memory after Effective Lifetime - (401)
│   │   │   └── Use of Object without Invoking Destructor Method - (1091)
│   │   ├── Not Using Password Aging - (262)
│   │   ├── Password Aging with Long Expiration - (263)
│   │   └── Release of Invalid Pointer or Reference - (763)
│   │       ├── Free of Pointer not at Start of Buffer - (761)
│   │       └── Mismatched Memory Management Routines - (762)
│   │           └── Free of Memory not on the Heap - (590)
│   ├── Improper Synchronization - (662)
│   │   ├── Improper Locking - (667)
│   │   │   ├── Deadlock - (833)
│   │   │   ├── Double-Checked Locking - (609)
│   │   │   ├── Hardware Internal or Debug Modes Allow Override of Locks - (1234)
│   │   │   ├── Improper Hardware Lock Protection for Security Sensitive Controls - (1233)
│   │   │   ├── Improper Lock Behavior After Power State Transition - (1232)
│   │   │   ├── Improper Resource Locking - (413)
│   │   │   │   └── Sensitive Data Storage in Improperly Locked Memory - (591)
│   │   │   ├── Missing Lock Check - (414)
│   │   │   ├── Multiple Locks of a Critical Resource - (764)
│   │   │   ├── Multiple Unlocks of a Critical Resource - (765)
│   │   │   ├── Unlock of a Resource that is not Locked - (832)
│   │   │   └── Unrestricted Externally Accessible Lock - (412)
│   │   ├── Incorrect Synchronization - (821)
│   │   │   ├── Call to Thread run() instead of start() - (572)
│   │   │   ├── EJB Bad Practices: Use of Synchronization Primitives - (574)
│   │   │   ├── Hardware Logic with Insecure De-Synchronization between Control and Data Channels - (1264)
│   │   │   └── Synchronous Access of Remote Resource without Timeout - (1088)
│   │   ├── Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element - (1058)
│   │   ├── Missing Synchronization - (820)
│   │   │   ├── Singleton Class Instance Creation without Proper Locking or Synchronization - (1096)
│   │   │   ├── Unsynchronized Access to Shared Data in a Multithreaded Context - (567)
│   │   │   └── Use of Singleton Pattern Without Synchronization in a Multithreaded Context - (543)
│   │   └── Use of a Non-reentrant Function in a Concurrent Context - (663)
│   │       ├── Signal Handler Use of a Non-reentrant Function - (479)
│   │       └── Use of getlogin() in Multithreaded Application - (558)
│   ├── Improper Update of Reference Count - (911)
│   ├── Improper Write Handling in Limited-write Non-Volatile Memories - (1246)
│   ├── Incomplete Internal State Distinction - (372)
│   ├── Incorrect Access of Indexable Resource ('Range Error') - (118)
│   │   └── Improper Restriction of Operations within the Bounds of a Memory Buffer - (119)
│   │       ├── Access of Memory Location After End of Buffer - (788)
│   │       │   ├── Buffer Over-read - (126)
│   │       │   ├── Heap-based Buffer Overflow - (122)
│   │       │   └── Stack-based Buffer Overflow - (121)
│   │       ├── Access of Memory Location Before Start of Buffer - (786)
│   │       │   ├── Buffer Under-read - (127)
│   │       │   └── Buffer Underwrite ('Buffer Underflow') - (124)
│   │       ├── Access of Uninitialized Pointer - (824)
│   │       ├── Buffer Access with Incorrect Length Value - (805)
│   │       │   └── Buffer Access Using Size of Source Buffer - (806)
│   │       ├── Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') - (120)
│   │       │   └── Use of Path Manipulation Function without Maximum-sized Buffer - (785)
│   │       ├── Expired Pointer Dereference - (825)
│   │       │   ├── Double Free - (415)
│   │       │   └── Use After Free - (416)
│   │       ├── Integer Overflow to Buffer Overflow - (680)
│   │       ├── Out-of-bounds Read - (125)
│   │       │   ├── Buffer Over-read - (126)
│   │       │   └── Buffer Under-read - (127)
│   │       ├── Out-of-bounds Write - (787)
│   │       │   ├── Buffer Underwrite ('Buffer Underflow') - (124)
│   │       │   ├── Heap-based Buffer Overflow - (122)
│   │       │   ├── Stack-based Buffer Overflow - (121)
│   │       │   └── Write-what-where Condition - (123)
│   │       ├── Return of Pointer Value Outside of Expected Range - (466)
│   │       ├── Untrusted Pointer Dereference - (822)
│   │       └── Use of Out-of-range Pointer Offset - (823)
│   ├── Incorrect Resource Transfer Between Spheres - (669)
│   │   ├── Client-Side Enforcement of Server-Side Security - (602)
│   │   │   ├── Reliance on Cookies without Validation and Integrity Checking - (565)
│   │   │   │   └── Reliance on Cookies without Validation and Integrity Checking in a Security Decision - (784)
│   │   │   └── Use of Client-Side Authentication - (603)
│   │   ├── Creation of chroot Jail Without Changing Working Directory - (243)
│   │   ├── Download of Code Without Integrity Check - (494)
│   │   ├── Improper Removal of Sensitive Information Before Storage or Transfer - (212)
│   │   │   ├── Sensitive Information Uncleared During Hardware Debug Flows - (1258)
│   │   │   └── Sensitive Information Uncleared in Resource Before Release for Reuse - (226)
│   │   │       ├── Improper Clearing of Heap Memory Before Release ('Heap Inspection') - (244)
│   │   │       └── Improper Zeroization of Hardware Register - (1239)
│   │   ├── Inclusion of Functionality from Untrusted Control Sphere - (829)
│   │   │   ├── Improper Control of Document Type Definition - (827)
│   │   │   ├── Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') - (98)
│   │   │   └── Inclusion of Web Functionality from an Untrusted Source - (830)
│   │   └── Unrestricted Upload of File with Dangerous Type - (434)
│   ├── Incorrect Type Conversion or Cast - (704)
│   │   ├── Access of Resource Using Incompatible Type ('Type Confusion') - (843)
│   │   ├── Attempt to Access Child of a Non-structure Pointer - (588)
│   │   └── Incorrect Conversion between Numeric Types - (681)
│   │       ├── Integer Coercion Error - (192)
│   │       ├── Numeric Truncation Error - (197)
│   │       ├── Signed to Unsigned Conversion Error - (195)
│   │       ├── Unexpected Sign Extension - (194)
│   │       └── Unsigned to Signed Conversion Error - (196)
│   ├── Information Loss or Omission - (221)
│   │   ├── Declaration of Catch for Generic Exception - (396)
│   │   ├── Declaration of Throws for Generic Exception - (397)
│   │   ├── Obscured Security-relevant Information by Alternate Name - (224)
│   │   ├── Omission of Security-relevant Information - (223)
│   │   │   └── Insufficient Logging - (778)
│   │   ├── Product UI does not Warn User of Unsafe Actions - (356)
│   │   ├── Truncation of Security-relevant Information - (222)
│   │   └── User Interface (UI) Misrepresentation of Critical Information - (451)
│   │       ├── Improper Restriction of Rendered UI Layers or Frames - (1021)
│   │       └── Insufficient Visual Distinction of Homoglyphs Presented to User - (1007)
│   ├── Insecure Storage of Sensitive Information - (922)
│   │   ├── Cleartext Storage of Sensitive Information - (312)
│   │   │   ├── Cleartext Storage in a File or on Disk - (313)
│   │   │   ├── Cleartext Storage in the Registry - (314)
│   │   │   ├── Cleartext Storage of Sensitive Information in Executable - (318)
│   │   │   ├── Cleartext Storage of Sensitive Information in GUI - (317)
│   │   │   ├── Cleartext Storage of Sensitive Information in Memory - (316)
│   │   │   └── Cleartext Storage of Sensitive Information in a Cookie - (315)
│   │   └── Storage of Sensitive Data in a Mechanism without Access Control - (921)
│   ├── Insufficient Resource Pool - (410)
│   ├── Modification of Assumed-Immutable Data (MAID) - (471)
│   │   ├── External Control of Assumed-Immutable Web Parameter - (472)
│   │   ├── PHP External Variable Modification - (473)
│   │   ├── Public Static Final Field References Mutable Object - (607)
│   │   └── Reliance on IP Address for Authentication - (291)
│   ├── Operation on Resource in Wrong Phase of Lifetime - (666)
│   │   ├── Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created - (593)
│   │   ├── Double Free - (415)
│   │   ├── Multiple Binds to the Same Port - (605)
│   │   ├── Operation on a Resource after Expiration or Release - (672)
│   │   │   ├── Expired Pointer Dereference - (825)
│   │   │   │   ├── Double Free - (415)
│   │   │   │   └── Use After Free - (416)
│   │   │   ├── Improper Validation of Certificate Expiration - (298)
│   │   │   ├── Insufficient Session Expiration - (613)
│   │   │   ├── Use of Expired File Descriptor - (910)
│   │   │   └── Use of a Key Past its Expiration Date - (324)
│   │   └── Premature Release of Resource During Expected Lifetime - (826)
│   ├── Private Data Structure Returned From A Public Method - (495)
│   ├── Public Data Assigned to Private Array-Typed Field - (496)
│   ├── Reliance on Package-level Scope - (487)
│   ├── Serializable Class Containing Sensitive Data - (499)
│   ├── Trust Boundary Violation - (501)
│   ├── Uncontrolled Resource Consumption - (400)
│   │   ├── Allocation of Resources Without Limits or Throttling - (770)
│   │   │   ├── Allocation of File Descriptors or Handles Without Limits or Throttling - (774)
│   │   │   └── Uncontrolled Memory Allocation - (789)
│   │   ├── Improper Restriction of Power Consumption - (920)
│   │   ├── Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations - (1235)
│   │   ├── Logging of Excessive Data - (779)
│   │   └── Missing Reference to Active Allocated Resource - (771)
│   │       └── Missing Reference to Active File Descriptor or Handle - (773)
│   ├── Use of Incorrectly-Resolved Name or Reference - (706)
│   │   ├── Improper Control of Document Type Definition - (827)
│   │   ├── Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') - (98)
│   │   ├── Improper Handling of Case Sensitivity - (178)
│   │   ├── Improper Handling of File Names that Identify Virtual Resources - (66)
│   │   │   ├── Improper Handling of Apple HFS+ Alternate Data Stream Path - (72)
│   │   │   ├── Improper Handling of Windows ::DATA Alternate Data Stream - (69)
│   │   │   └── Improper Handling of Windows Device Names - (67)
│   │   ├── Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - (22)
│   │   │   ├── Absolute Path Traversal - (36)
│   │   │   │   ├── Path Traversal: '/absolute/pathname/here' - (37)
│   │   │   │   ├── Path Traversal: 'C:dirname' - (39)
│   │   │   │   ├── Path Traversal: '\\UNC\share\name\' (Windows UNC Share) - (40)
│   │   │   │   └── Path Traversal: '\absolute\pathname\here' - (38)
│   │   │   └── Relative Path Traversal - (23)
│   │   │       ├── Path Traversal: '...' (Triple Dot) - (32)
│   │   │       ├── Path Traversal: '....' (Multiple Dot) - (33)
│   │   │       ├── Path Traversal: '....//' - (34)
│   │   │       ├── Path Traversal: '.../...//' - (35)
│   │   │       ├── Path Traversal: '../filedir' - (24)
│   │   │       ├── Path Traversal: '..\filedir' - (28)
│   │   │       ├── Path Traversal: '/../filedir' - (25)
│   │   │       ├── Path Traversal: '/dir/../filename' - (26)
│   │   │       ├── Path Traversal: '\..\filename' - (29)
│   │   │       ├── Path Traversal: '\dir\..\filename' - (30)
│   │   │       ├── Path Traversal: 'dir/../../filename' - (27)
│   │   │       └── Path Traversal: 'dir\..\..\filename' - (31)
│   │   ├── Improper Link Resolution Before File Access ('Link Following') - (59)
│   │   │   ├── UNIX Hard Link - (62)
│   │   │   ├── UNIX Symbolic Link (Symlink) Following - (61)
│   │   │   ├── Windows Hard Link - (65)
│   │   │   └── Windows Shortcut Following (.LNK) - (64)
│   │   ├── Improper Resolution of Path Equivalence - (41)
│   │   │   ├── Path Equivalence: ' filename' (Leading Space) - (47)
│   │   │   ├── Path Equivalence: '/./' (Single Dot Directory) - (55)
│   │   │   ├── Path Equivalence: '//multiple/leading/slash' - (50)
│   │   │   ├── Path Equivalence: '/multiple//internal/slash' - (51)
│   │   │   ├── Path Equivalence: '/multiple/trailing/slash//' - (52)
│   │   │   ├── Path Equivalence: '\multiple\\internal\backslash' - (53)
│   │   │   ├── Path Equivalence: 'fakedir/../realdir/filename' - (57)
│   │   │   ├── Path Equivalence: 'file name' (Internal Whitespace) - (48)
│   │   │   ├── Path Equivalence: 'file.name' (Internal Dot) - (44)
│   │   │   │   └── Path Equivalence: 'file...name' (Multiple Internal Dot) - (45)
│   │   │   ├── Path Equivalence: 'filedir*' (Wildcard) - (56)
│   │   │   ├── Path Equivalence: 'filedir\' (Trailing Backslash) - (54)
│   │   │   ├── Path Equivalence: 'filename ' (Trailing Space) - (46)
│   │   │   ├── Path Equivalence: 'filename.' (Trailing Dot) - (42)
│   │   │   │   └── Path Equivalence: 'filename....' (Multiple Trailing Dot) - (43)
│   │   │   ├── Path Equivalence: 'filename/' (Trailing Slash) - (49)
│   │   │   └── Path Equivalence: Windows 8.3 Filename - (58)
│   │   └── Symbolic Name not Mapping to Correct Object - (386)
│   └── clone() Method Without super.clone() - (580)
├── Improper Interaction Between Multiple Correctly-Behaving Entities - (435)
│   ├── Behavioral Change in New Version or Environment - (439)
│   ├── Insecure Automated Optimizations - (1038)
│   │   ├── Compiler Optimization Removal or Modification of Security-critical Code - (733)
│   │   │   └── Compiler Removal of Code to Clear Buffers - (14)
│   │   └── Processor Optimization Removal or Modification of Security-critical Code - (1037)
│   ├── Interpretation Conflict - (436)
│   │   ├── Improper Neutralization of Invalid Characters in Identifiers in Web Pages - (86)
│   │   ├── Incomplete Model of Endpoint Features - (437)
│   │   ├── Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') - (444)
│   │   ├── Misinterpretation of Input - (115)
│   │   ├── Null Byte Interaction Error (Poison Null Byte) - (626)
│   │   └── Trusting HTTP Permission Methods on the Server Side - (650)
│   └── Reliance on Data/Memory Layout - (188)
│       └── Use of Incorrect Byte Ordering - (198)
├── Improper Neutralization - (707)
│   ├── Deletion of Data Structure Sentinel - (463)
│   ├── Encoding Error - (172)
│   │   ├── Double Decoding of the Same Data - (174)
│   │   ├── Improper Handling of Alternate Encoding - (173)
│   │   ├── Improper Handling of Mixed Encoding - (175)
│   │   ├── Improper Handling of URL Encoding (Hex Encoding) - (177)
│   │   └── Improper Handling of Unicode Encoding - (176)
│   ├── Improper Encoding or Escaping of Output - (116)
│   │   ├── Improper Neutralization of HTTP Headers for Scripting Syntax - (644)
│   │   ├── Improper Output Neutralization for Logs - (117)
│   │   └── Inappropriate Encoding for Output Context - (838)
│   ├── Improper Handling of Inconsistent Structural Elements - (240)
│   │   └── Improper Handling of Length Parameter Inconsistency - (130)
│   ├── Improper Handling of Syntactically Invalid Structure - (228)
│   │   ├── Improper Handling of Parameters - (233)
│   │   │   ├── Failure to Handle Missing Parameter - (234)
│   │   │   ├── Improper Handling of Extra Parameters - (235)
│   │   │   └── Improper Handling of Undefined Parameters - (236)
│   │   ├── Improper Handling of Structural Elements - (237)
│   │   │   ├── Failure to Handle Incomplete Element - (239)
│   │   │   ├── Improper Handling of Incomplete Structural Elements - (238)
│   │   │   └── Improper Handling of Inconsistent Structural Elements - (240)
│   │   │       └── Improper Handling of Length Parameter Inconsistency - (130)
│   │   ├── Improper Handling of Unexpected Data Type - (241)
│   │   └── Improper Handling of Values - (229)
│   │       ├── Improper Handling of Extra Values - (231)
│   │       ├── Improper Handling of Missing Values - (230)
│   │       └── Improper Handling of Undefined Values - (232)
│   ├── Improper Input Validation - (20)
│   │   ├── Improper Use of Validation Framework - (1173)
│   │   │   ├── ASP.NET Misconfiguration: Improper Model Validation - (1174)
│   │   │   ├── ASP.NET Misconfiguration: Not Using Input Validation Framework - (554)
│   │   │   ├── Struts: Duplicate Validation Forms - (102)
│   │   │   ├── Struts: Form Field Without Validator - (105)
│   │   │   ├── Struts: Plug-in Framework not in Use - (106)
│   │   │   ├── Struts: Unvalidated Action Form - (108)
│   │   │   └── Struts: Validator Turned Off - (109)
│   │   ├── Improper Validation of Consistency within Input - (1288)
│   │   ├── Improper Validation of Function Hook Arguments - (622)
│   │   ├── Improper Validation of Specified Index, Position, or Offset in Input - (1285)
│   │   │   ├── Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code - (781)
│   │   │   └── Improper Validation of Array Index - (129)
│   │   ├── Improper Validation of Specified Quantity in Input - (1284)
│   │   │   ├── Unchecked Input for Loop Condition - (606)
│   │   │   └── Uncontrolled Memory Allocation - (789)
│   │   ├── Improper Validation of Specified Type of Input - (1287)
│   │   ├── Improper Validation of Syntactic Correctness of Input - (1286)
│   │   │   └── Missing XML Validation - (112)
│   │   ├── Improper Validation of Unsafe Equivalence in Input - (1289)
│   │   └── Incorrect Behavior Order: Early Validation - (179)
│   │       ├── Incorrect Behavior Order: Validate Before Canonicalize - (180)
│   │       └── Incorrect Behavior Order: Validate Before Filter - (181)
│   ├── Improper Neutralization of Special Elements - (138)
│   │   ├── Addition of Data Structure Sentinel - (464)
│   │   ├── Failure to Sanitize Paired Delimiters - (157)
│   │   ├── Improper Filtering of Special Elements - (790)
│   │   │   └── Incomplete Filtering of Special Elements - (791)
│   │   │       ├── Incomplete Filtering of One or More Instances of Special Elements - (792)
│   │   │       │   ├── Incomplete Filtering of Multiple Instances of Special Elements - (794)
│   │   │       │   └── Only Filtering One Instance of a Special Element - (793)
│   │   │       └── Only Filtering Special Elements at a Specified Location - (795)
│   │   │           ├── Only Filtering Special Elements Relative to a Marker - (796)
│   │   │           └── Only Filtering Special Elements at an Absolute Position - (797)
│   │   ├── Improper Handling of Invalid Use of Special Elements - (159)
│   │   │   ├── Improper Handling of Additional Special Element - (167)
│   │   │   ├── Improper Handling of Inconsistent Special Elements - (168)
│   │   │   └── Improper Handling of Missing Special Element - (166)
│   │   ├── Improper Neutralization of Comment Delimiters - (151)
│   │   ├── Improper Neutralization of Delimiters - (140)
│   │   │   ├── Improper Neutralization of Expression/Command Delimiters - (146)
│   │   │   ├── Improper Neutralization of Line Delimiters - (144)
│   │   │   ├── Improper Neutralization of Parameter/Argument Delimiters - (141)
│   │   │   ├── Improper Neutralization of Record Delimiters - (143)
│   │   │   ├── Improper Neutralization of Section Delimiters - (145)
│   │   │   └── Improper Neutralization of Value Delimiters - (142)
│   │   ├── Improper Neutralization of Escape, Meta, or Control Sequences - (150)
│   │   ├── Improper Neutralization of Input Leaders - (148)
│   │   ├── Improper Neutralization of Input Terminators - (147)
│   │   │   └── Null Byte Interaction Error (Poison Null Byte) - (626)
│   │   ├── Improper Neutralization of Internal Special Elements - (164)
│   │   │   └── Improper Neutralization of Multiple Internal Special Elements - (165)
│   │   │       ├── Path Equivalence: '\multiple\\internal\backslash' - (53)
│   │   │       └── Path Equivalence: 'file...name' (Multiple Internal Dot) - (45)
│   │   ├── Improper Neutralization of Leading Special Elements - (160)
│   │   │   ├── Improper Neutralization of Multiple Leading Special Elements - (161)
│   │   │   │   └── Path Equivalence: '//multiple/leading/slash' - (50)
│   │   │   └── Path Traversal: '/absolute/pathname/here' - (37)
│   │   ├── Improper Neutralization of Macro Symbols - (152)
│   │   ├── Improper Neutralization of Null Byte or NUL Character - (158)
│   │   ├── Improper Neutralization of Quoting Syntax - (149)
│   │   ├── Improper Neutralization of Substitution Characters - (153)
│   │   ├── Improper Neutralization of Trailing Special Elements - (162)
│   │   │   ├── Improper Neutralization of Multiple Trailing Special Elements - (163)
│   │   │   │   ├── Path Equivalence: '/multiple/trailing/slash//' - (52)
│   │   │   │   └── Path Equivalence: 'filename....' (Multiple Trailing Dot) - (43)
│   │   │   ├── Path Equivalence: 'filedir\' (Trailing Backslash) - (54)
│   │   │   ├── Path Equivalence: 'filename ' (Trailing Space) - (46)
│   │   │   ├── Path Equivalence: 'filename.' (Trailing Dot) - (42)
│   │   │   │   └── Path Equivalence: 'filename....' (Multiple Trailing Dot) - (43)
│   │   │   └── Path Equivalence: 'filename/' (Trailing Slash) - (49)
│   │   ├── Improper Neutralization of Variable Name Delimiters - (154)
│   │   ├── Improper Neutralization of Whitespace - (156)
│   │   └── Improper Neutralization of Wildcards or Matching Symbols - (155)
│   │       └── Path Equivalence: 'filedir*' (Wildcard) - (56)
│   ├── Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - (74)
│   │   ├── Failure to Sanitize Special Elements into a Different Plane (Special Element Injection) - (75)
│   │   │   └── Improper Neutralization of Equivalent Special Elements - (76)
│   │   ├── Improper Control of Generation of Code ('Code Injection') - (94)
│   │   │   ├── Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection') - (95)
│   │   │   └── Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') - (96)
│   │   │       └── Improper Neutralization of Server-Side Includes (SSI) Within a Web Page - (97)
│   │   ├── Improper Control of Resource Identifiers ('Resource Injection') - (99)
│   │   │   ├── Improper Control of Dynamically-Identified Variables - (914)
│   │   │   │   ├── Dynamic Variable Evaluation - (627)
│   │   │   │   └── Variable Extraction Error - (621)
│   │   │   ├── Improper Restriction of Names for Files and Other Resources - (641)
│   │   │   └── Use of Multiple Resources with Duplicate Identifier - (694)
│   │   │       ├── Duplicate Key in Associative List (Alist) - (462)
│   │   │       └── Struts: Duplicate Validation Forms - (102)
│   │   ├── Improper Neutralization of CRLF Sequences ('CRLF Injection') - (93)
│   │   │   └── Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting') - (113)
│   │   ├── Improper Neutralization of Formula Elements in a CSV File - (1236)
│   │   ├── Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - (79)
│   │   │   ├── Doubled Character XSS Manipulations - (85)
│   │   │   ├── Improper Neutralization of Alternate XSS Syntax - (87)
│   │   │   ├── Improper Neutralization of Encoded URI Schemes in a Web Page - (84)
│   │   │   ├── Improper Neutralization of Invalid Characters in Identifiers in Web Pages - (86)
│   │   │   ├── Improper Neutralization of Script in Attributes in a Web Page - (83)
│   │   │   │   └── Improper Neutralization of Script in Attributes of IMG Tags in a Web Page - (82)
│   │   │   ├── Improper Neutralization of Script in an Error Message Web Page - (81)
│   │   │   ├── Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) - (80)
│   │   │   └── Incomplete Denylist to Cross-Site Scripting - (692)
│   │   ├── Improper Neutralization of Special Elements in Data Query Logic - (943)
│   │   │   ├── Improper Neutralization of Data within XPath Expressions ('XPath Injection') - (643)
│   │   │   ├── Improper Neutralization of Data within XQuery Expressions ('XQuery Injection') - (652)
│   │   │   ├── Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') - (90)
│   │   │   └── Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - (89)
│   │   │       └── SQL Injection: Hibernate - (564)
│   │   ├── Improper Neutralization of Special Elements used in a Command ('Command Injection') - (77)
│   │   │   ├── Executable Regular Expression Error - (624)
│   │   │   ├── Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') - (88)
│   │   │   ├── Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection') - (917)
│   │   │   └── Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') - (78)
│   │   └── XML Injection (aka Blind XPath Injection) - (91)
│   │       ├── Improper Neutralization of Data within XPath Expressions ('XPath Injection') - (643)
│   │       └── Improper Neutralization of Data within XQuery Expressions ('XQuery Injection') - (652)
│   └── Improper Null Termination - (170)
├── Incorrect Calculation - (682)
│   ├── Divide By Zero - (369)
│   ├── Incorrect Calculation of Buffer Size - (131)
│   ├── Incorrect Calculation of Multi-Byte String Length - (135)
│   ├── Incorrect Pointer Scaling - (468)
│   ├── Integer Overflow or Wraparound - (190)
│   ├── Integer Underflow (Wrap or Wraparound) - (191)
│   ├── Off-by-one Error - (193)
│   ├── Use of Pointer Subtraction to Determine Size - (469)
│   ├── Use of sizeof() on a Pointer Type - (467)
│   └── Wrap-around Error - (128)
├── Incorrect Comparison - (697)
│   ├── Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations - (1039)
│   ├── Comparison Using Wrong Factors - (1025)
│   │   ├── Comparison of Classes by Name - (486)
│   │   └── Comparison of Object References Instead of Object Contents - (595)
│   │       └── Use of Wrong Operator in String Comparison - (597)
│   ├── Comparison of Incompatible Types - (1024)
│   ├── Floating Point Comparison with Incorrect Operator - (1077)
│   ├── Incomplete Comparison with Missing Factors - (1023)
│   │   ├── Incomplete List of Disallowed Inputs - (184)
│   │   ├── Missing Default Case in Switch Statement - (478)
│   │   ├── Numeric Range Comparison Without Minimum Check - (839)
│   │   └── Partial String Comparison - (187)
│   ├── Incorrect Comparison Logic Granularity - (1254)
│   ├── Incorrect Regular Expression - (185)
│   │   ├── Overly Restrictive Regular Expression - (186)
│   │   └── Permissive Regular Expression - (625)
│   │       └── Regular Expression without Anchors - (777)
│   ├── Object Model Violation: Just One of Equals and Hashcode Defined - (581)
│   └── Permissive List of Allowed Inputs - (183)
│       └── Permissive Cross-domain Policy with Untrusted Domains - (942)
├── Insufficient Control Flow Management - (691)
│   ├── Always-Incorrect Control Flow Implementation - (670)
│   │   ├── Execution After Redirect (EAR) - (698)
│   │   ├── Incorrect Block Delimitation - (483)
│   │   ├── Omitted Break Statement in Switch - (484)
│   │   ├── Operator Precedence Logic Error - (783)
│   │   ├── Reachable Assertion - (617)
│   │   └── Use of Incorrect Operator - (480)
│   │       ├── Assigning instead of Comparing - (481)
│   │       ├── Comparing instead of Assigning - (482)
│   │       └── Use of Wrong Operator in String Comparison - (597)
│   ├── Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') - (362)
│   │   ├── Context Switching Race Condition - (368)
│   │   ├── Race Condition During Access to Alternate Channel - (421)
│   │   ├── Race Condition for Write-Once Attributes - (1223)
│   │   ├── Race Condition within a Thread - (366)
│   │   ├── Signal Handler Race Condition - (364)
│   │   │   ├── Dangerous Signal Handler not Disabled During Sensitive Operations - (432)
│   │   │   ├── Signal Handler Function Associated with Multiple Signals - (831)
│   │   │   └── Signal Handler with Functionality that is not Asynchronous-Safe - (828)
│   │   │       └── Signal Handler Use of a Non-reentrant Function - (479)
│   │   └── Time-of-check Time-of-use (TOCTOU) Race Condition - (367)
│   │       ├── Race Condition Enabling Link Following - (363)
│   │       └── Race Condition in Switch - (365)
│   ├── Deployment of Wrong Handler - (430)
│   ├── Excessive Iteration - (834)
│   │   └── Loop with Unreachable Exit Condition ('Infinite Loop') - (835)
│   ├── Exposed Dangerous Method or Function - (749)
│   │   ├── Exposed IOCTL with Insufficient Access Control - (782)
│   │   └── Exposed Unsafe ActiveX Method - (618)
│   ├── Improper Control of Generation of Code ('Code Injection') - (94)
│   │   ├── Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection') - (95)
│   │   └── Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') - (96)
│   │       └── Improper Neutralization of Server-Side Includes (SSI) Within a Web Page - (97)
│   ├── Improper Control of Interaction Frequency - (799)
│   │   ├── Improper Enforcement of a Single, Unique Action - (837)
│   │   └── Improper Restriction of Excessive Authentication Attempts - (307)
│   ├── Improper Enforcement of Behavioral Workflow - (841)
│   ├── Improper Synchronization - (662)
│   │   ├── Improper Locking - (667)
│   │   │   ├── Deadlock - (833)
│   │   │   ├── Double-Checked Locking - (609)
│   │   │   ├── Hardware Internal or Debug Modes Allow Override of Locks - (1234)
│   │   │   ├── Improper Hardware Lock Protection for Security Sensitive Controls - (1233)
│   │   │   ├── Improper Lock Behavior After Power State Transition - (1232)
│   │   │   ├── Improper Resource Locking - (413)
│   │   │   │   └── Sensitive Data Storage in Improperly Locked Memory - (591)
│   │   │   ├── Missing Lock Check - (414)
│   │   │   ├── Multiple Locks of a Critical Resource - (764)
│   │   │   ├── Multiple Unlocks of a Critical Resource - (765)
│   │   │   ├── Unlock of a Resource that is not Locked - (832)
│   │   │   └── Unrestricted Externally Accessible Lock - (412)
│   │   ├── Incorrect Synchronization - (821)
│   │   │   ├── Call to Thread run() instead of start() - (572)
│   │   │   ├── EJB Bad Practices: Use of Synchronization Primitives - (574)
│   │   │   ├── Hardware Logic with Insecure De-Synchronization between Control and Data Channels - (1264)
│   │   │   └── Synchronous Access of Remote Resource without Timeout - (1088)
│   │   ├── Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element - (1058)
│   │   ├── Missing Synchronization - (820)
│   │   │   ├── Singleton Class Instance Creation without Proper Locking or Synchronization - (1096)
│   │   │   ├── Unsynchronized Access to Shared Data in a Multithreaded Context - (567)
│   │   │   └── Use of Singleton Pattern Without Synchronization in a Multithreaded Context - (543)
│   │   └── Use of a Non-reentrant Function in a Concurrent Context - (663)
│   │       ├── Signal Handler Use of a Non-reentrant Function - (479)
│   │       └── Use of getlogin() in Multithreaded Application - (558)
│   ├── Incorrect Behavior Order - (696)
│   │   ├── Access Control Check Implemented After Asset is Accessed - (1280)
│   │   ├── DMA Device Enabled Too Early in Boot Phase - (1190)
│   │   ├── Incorrect Behavior Order: Authorization Before Parsing and Canonicalization - (551)
│   │   ├── Incorrect Behavior Order: Early Amplification - (408)
│   │   ├── Incorrect Behavior Order: Early Validation - (179)
│   │   │   ├── Incorrect Behavior Order: Validate Before Canonicalize - (180)
│   │   │   └── Incorrect Behavior Order: Validate Before Filter - (181)
│   │   └── Power-On of Untrusted Execution Core Before Enabling Fabric Access Control - (1193)
│   ├── Incorrect Control Flow Scoping - (705)
│   │   ├── Declaration of Catch for Generic Exception - (396)
│   │   ├── Declaration of Throws for Generic Exception - (397)
│   │   ├── Execution After Redirect (EAR) - (698)
│   │   ├── J2EE Bad Practices: Use of System.exit() - (382)
│   │   ├── Non-exit on Failed Initialization - (455)
│   │   ├── Return Inside Finally Block - (584)
│   │   ├── Uncaught Exception - (248)
│   │   │   └── Uncaught Exception in Servlet  - (600)
│   │   └── Use of NullPointerException Catch to Detect NULL Pointer Dereference - (395)
│   ├── Incorrect Short Circuit Evaluation - (768)
│   ├── Missing Handler - (431)
│   ├── Sequence of Processor Instructions Leads to Unexpected Behavior (Halt and Catch Fire) - (1281)
│   ├── Uncontrolled Recursion - (674)
│   │   └── Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion') - (776)
│   ├── Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls - (1265)
│   └── Unsafe ActiveX Control Marked Safe For Scripting - (623)
└── Protection Mechanism Failure - (693)
    ├── Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations - (1039)
    ├── Client-Side Enforcement of Server-Side Security - (602)
    │   ├── Reliance on Cookies without Validation and Integrity Checking - (565)
    │   │   └── Reliance on Cookies without Validation and Integrity Checking in a Security Decision - (784)
    │   └── Use of Client-Side Authentication - (603)
    ├── Collapse of Data into Unsafe Value - (182)
    ├── Improper Protection of Alternate Path - (424)
    │   └── Direct Request ('Forced Browsing') - (425)
    ├── Improperly Implemented Security Check for Standard - (358)
    ├── Inadequate Encryption Strength - (326)
    │   ├── Reversible One-Way Hash - (328)
    │   └── Weak Encoding for Password - (261)
    ├── Incomplete List of Disallowed Inputs - (184)
    ├── Incorrect Selection of Fuse Values - (1253)
    ├── Insufficient Compartmentalization - (653)
    ├── Insufficient Logging - (778)
    ├── Insufficient Physical Protection Mechanism - (1263)
    ├── Insufficient Psychological Acceptability - (655)
    ├── Insufficient UI Warning of Dangerous Operations - (357)
    │   └── Multiple Interpretations of UI Input - (450)
    ├── Insufficient Verification of Data Authenticity - (345)
    │   ├── Acceptance of Extraneous Untrusted Data With Trusted Data - (349)
    │   ├── Cross-Site Request Forgery (CSRF) - (352)
    │   ├── Improper Enforcement of Message Integrity During Transmission in a Communication Channel - (924)
    │   ├── Improper Validation of Integrity Check Value - (354)
    │   ├── Improper Verification of Cryptographic Signature - (347)
    │   ├── Incomplete Identification of Uploaded File Variables (PHP) - (616)
    │   ├── Insufficient Type Distinction - (351)
    │   ├── Missing Support for Integrity Check - (353)
    │   ├── Origin Validation Error - (346)
    │   ├── Reliance on File Name or Extension of Externally-Supplied File - (646)
    │   ├── Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking - (649)
    │   ├── Trust of System Event Data - (360)
    │   │   └── Unprotected Windows Messaging Channel ('Shatter') - (422)
    │   └── Use of Less Trusted Source - (348)
    ├── Missing Encryption of Sensitive Data - (311)
    │   ├── Cleartext Storage of Sensitive Information - (312)
    │   │   ├── Cleartext Storage in a File or on Disk - (313)
    │   │   ├── Cleartext Storage in the Registry - (314)
    │   │   ├── Cleartext Storage of Sensitive Information in Executable - (318)
    │   │   ├── Cleartext Storage of Sensitive Information in GUI - (317)
    │   │   ├── Cleartext Storage of Sensitive Information in Memory - (316)
    │   │   └── Cleartext Storage of Sensitive Information in a Cookie - (315)
    │   ├── Cleartext Transmission of Sensitive Information - (319)
    │   │   └── J2EE Misconfiguration: Data Transmission Without Encryption - (5)
    │   └── Sensitive Cookie in HTTPS Session Without 'Secure' Attribute - (614)
    ├── Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques - (1278)
    ├── Product Released in Non-Release Configuration - (1269)
    ├── Reliance on Security Through Obscurity - (656)
    ├── Reliance on Untrusted Inputs in a Security Decision - (807)
    │   ├── Authentication Bypass by Assumed-Immutable Data - (302)
    │   ├── Reliance on Cookies without Validation and Integrity Checking in a Security Decision - (784)
    │   └── Reliance on Reverse DNS Resolution for a Security-Critical Action - (350)
    ├── Reliance on a Single Factor in a Security Decision - (654)
    │   ├── Use of Password System for Primary Authentication - (309)
    │   └── Use of Single-factor Authentication - (308)
    ├── Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade') - (757)
    ├── Semiconductor Defects in Hardware Logic with Security-Sensitive Implications - (1248)
    ├── Use of Insufficiently Random Values - (330)
    │   ├── Generation of Predictable Numbers or Identifiers - (340)
    │   │   ├── Predictable Exact Value from Previous Values - (342)
    │   │   ├── Predictable Value Range from Previous Values - (343)
    │   │   └── Predictable from Observable State - (341)
    │   ├── Guessable CAPTCHA - (804)
    │   ├── Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG) - (335)
    │   │   ├── Predictable Seed in Pseudo-Random Number Generator (PRNG) - (337)
    │   │   ├── Same Seed in Pseudo-Random Number Generator (PRNG) - (336)
    │   │   └── Small Seed Space in PRNG - (339)
    │   ├── Insufficient Entropy - (331)
    │   │   ├── Improper Handling of Insufficient Entropy in TRNG - (333)
    │   │   └── Insufficient Entropy in PRNG - (332)
    │   ├── Not Using a Random IV with CBC Mode - (329)
    │   ├── Small Space of Random Values - (334)
    │   │   └── J2EE Misconfiguration: Insufficient Session-ID Length - (6)
    │   ├── Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) - (338)
    │   ├── Use of Invariant Value in Dynamically Changing Context - (344)
    │   │   ├── Assignment of a Fixed Address to a Pointer - (587)
    │   │   ├── Reusing a Nonce, Key Pair in Encryption - (323)
    │   │   └── Use of Hard-coded Credentials - (798)
    │   │       ├── Use of Hard-coded Cryptographic Key - (321)
    │   │       └── Use of Hard-coded Password - (259)
    │   └── Use of Predictable Algorithm in Random Number Generator - (1241)
    └── Use of a Broken or Risky Cryptographic Algorithm - (327)
        ├── Reversible One-Way Hash - (328)
        ├── Use of Password Hash With Insufficient Computational Effort - (916)
        │   ├── Use of a One-Way Hash with a Predictable Salt - (760)
        │   └── Use of a One-Way Hash without a Salt - (759)
        ├── Use of RSA Algorithm without OAEP - (780)
        └── Use of a Risky Cryptographic Primitive - (1240)
